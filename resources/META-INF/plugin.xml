<idea-plugin>
    <id>cz.csas.smart</id>
    <name>SmartCase IDEA Plugin</name>
    <version>0.1</version>
    <vendor email="jpsenicka@csas.cz" url="http://www.csas.cz">Jaroslav Psenicka</vendor>

    <description><![CDATA[
      IDEA support for SmartCase designers.
    ]]></description>

    <change-notes><![CDATA[
      Very initial version, implements only basic JSON editor features.
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="141.0"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products
    <depends>com.intellij.modules.lang</depends>
    -->

    <extensions defaultExtensionNs="com.intellij">
        <applicationConfigurable groupId="tools" instance="cz.csas.smart.idea.SmartCaseConfigurable"/>
        <fileTypeFactory implementation="cz.csas.smart.idea.SmartFileTypeFactory"/>
        <lang.parserDefinition language="JSON" implementationClass="com.intellij.json.JsonParserDefinition"/>
        <lang.syntaxHighlighterFactory language="JSON" implementationClass="com.intellij.json.highlighting.JsonSyntaxHighlighterFactory"/>

        <!-- Code style and formatting
        <codeStyleSettingsProvider implementation="com.intellij.json.formatter.JsonCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider implementation="com.intellij.json.formatter.JsonLanguageCodeStyleSettingsProvider"/>
        <colorSettingsPage implementation="com.intellij.json.highlighting.JsonColorsPage"/ -->
        <lang.formatter language="JSON" implementationClass="com.intellij.json.formatter.JsonFormattingBuilderModel"/>
        <lang.braceMatcher language="JSON" implementationClass="com.intellij.json.JsonBraceMatcher"/>
        <quoteHandler fileType="JSON" className="com.intellij.json.JsonQuoteHandler"/>
        <enterHandlerDelegate implementation="com.intellij.json.formatter.JsonEnterBetweenBracesHandler"/>

        <!-- Codeinsight -->
        <completion.contributor language="JSON" implementationClass="cz.csas.smart.idea.SmartCompletionContributor"/>
        <!-- breadcrumbsInfoProvider implementation="com.intellij.json.breadcrumbs.JsonBreadcrumbsProvider"/>
        <qualifiedNameProvider implementation="com.intellij.json.navigation.JsonQualifiedNameProvider"/>
        <lang.psiStructureViewFactory language="JSON" implementationClass="com.intellij.json.structureView.JsonStructureViewBuilderFactory"/>
        <lang.foldingBuilder language="JSON" implementationClass="com.intellij.json.editor.folding.JsonFoldingBuilder"/>
        <lang.smartEnterProcessor language="JSON" implementationClass="com.intellij.json.editor.smartEnter.JsonSmartEnterProcessor"/>
        <lang.namesValidator language="JSON" implementationClass="com.intellij.json.JsonNamesValidator"/>
        <lang.commenter language="JSON" implementationClass="com.intellij.json.editor.JsonCommenter"/>
        <lang.surroundDescriptor language="JSON" implementationClass="com.intellij.json.surroundWith.JsonSurroundDescriptor"/>
        <lang.findUsagesProvider language="JSON" implementationClass="com.intellij.json.findUsages.JsonFindUsagesProvider"/>
        <statementUpDownMover implementation="com.intellij.json.editor.lineMover.JsonLineMover" id="JSON" order="before line"/>
        <liveTemplateContext implementation="com.intellij.json.liveTemplates.JsonContextType"/>
        <spellchecker.support language="JSON" implementationClass="com.intellij.json.JsonSpellcheckerStrategy"/>
        <extendWordSelectionHandler implementation="com.intellij.json.editor.selection.JsonStringLiteralSelectionHandler"/>
        <basicWordSelectionFilter implementation="com.intellij.json.editor.selection.JsonBasicWordSelectionFilter"/ -->

        <!-- Annotators -->
        <!-- annotator language="JSON" implementationClass="com.intellij.json.codeinsight.JsonLiteralAnnotator"/ -->

        <!-- Inspections -->
        <!-- localInspection language="JSON" shortName="JsonStandardCompliance"
                         bundle="com.intellij.json.JsonBundle" key="inspection.compliance.name" groupKey="json.inspection.group"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="com.intellij.json.codeinsight.JsonStandardComplianceInspection"/>
        <localInspection language="JSON" shortName="JsonDuplicatePropertyKeys"
                         bundle="com.intellij.json.JsonBundle" key="inspection.duplicate.keys.name" groupKey="json.inspection.group"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="com.intellij.json.codeinsight.JsonDuplicatePropertyKeysInspection"/>

        <lang.elementManipulator forClass="com.intellij.json.psi.JsonStringLiteral"
                                 implementationClass="com.intellij.json.psi.JsonStringLiteralManipulator"/ -->

    </extensions>


    <actions>
        <action id="smart.upload" class="cz.csas.smart.idea.UploadAction"
            text="Upload" description="Upload to server, with options">
            <add-to-group group-id="EditorPopupMenu1.FindRefactor" anchor="last"/>
            <keyboard-shortcut first-keystroke="control U" keymap="$default" replace-all="true"/>
        </action>
        <action id="smart.uploadFast" class="cz.csas.smart.idea.UploadFastAction"
            text="Upload!" description="Upload to server">
            <keyboard-shortcut first-keystroke="control shift U" keymap="$default" replace-all="true"/>
        </action>
    </actions>

</idea-plugin>