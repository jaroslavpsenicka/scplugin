[
  {
    "name": "account-field",
    "label": "The field is able to enter account number and bank code. It can save as Object to account and as string to fullAccountNumber at the same time.",
    "model": {
      "account": {
        "type": "MAP",
        "label": "The account instance with account, prefix and bankCode as properties",
        "input": true,
        "output": true,
        "supportsAny": false,
        "structureType": "cz.csas.smart.core.model.AccountDto"
      },
      "fullAccountNumber": {
        "type": "STRING",
        "label": "The account number as String. Example: 123-123456/0800",
        "direction": "IO",
        "supportsAny": false,
        "structureType": null
      },
      "prefix": {
        "type": "STRING",
        "label": "The account prefix (without account number and bank code). Example: 123",
        "direction": "IO",
        "supportsAny": false,
        "structureType": null
      },
      "accountNumber": {
        "type": "STRING",
        "label": "The account number (without prefix and bank code). Example: 123456",
        "direction": "IO",
        "supportsAny": false,
        "structureType": null
      },
      "bankCode": {
        "type": "STRING",
        "label": "The bank code (without prefix and account number). Example: 0800",
        "direction": "IO",
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/account/account.js",
    "application": null,
    "documentation": "SMART_UIF001+account-field",
    "properties": [
      {
        "name": "prefixLabel",
        "label": "Placeholder for field with prefix",
        "defaultValue": "předčíslí",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": "F"
      },
      {
        "name": "prefixAutoComplete",
        "label": "Autocomplete for prefix Label",
        "defaultValue": "on",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": "F"
      },
      {
        "name": "accountLabel",
        "label": "Placeholder for field with account number",
        "defaultValue": "číslo účtu",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": "F"
      },
      {
        "name": "accountAutoComplete",
        "label": "Autocomplete for account Label",
        "defaultValue": "on",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": "F"
      },
      {
        "name": "bankCodeLabel",
        "label": "Placeholder for field with bank code",
        "defaultValue": "kód banky",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": "F"
      },
      {
        "name": "readOnlyBankCode",
        "label": "Set value for bank code (0800, 0100, ...) that is uneditable.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": "F"
      },
      {
        "name": "accountPrefixNullValue",
        "label": "Set default value of prefix in case of non existing account prefix value",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": "F"
      },
      {
        "name": "modulo11",
        "label": "account number had to be modulo 11",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": "F"
      },
      {
        "name": "bankCodeFromSelector",
        "label": "Flag which force component to use bankCode specified in selector",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": "F"
      }
    ]
  },
  {
    "name": "authorization-code-field",
    "label": "This field calls AuthorizationCodeController",
    "model": {
      "code": {
        "type": "MAP",
        "label": "Output CodeDTO.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.pink.code.CodeDto"
      },
      "cidla": {
        "type": "STRING",
        "label": "Input for cidla.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/authorizationcode/authorizationcodefield.js",
    "application": "pink",
    "documentation": "authorization-code-field",
    "properties": []
  },
  {
    "name": "bank-address-field",
    "label": "The field for bank address. It can show the address derived from account.bankCode or bankCode",
    "model": {
      "bankCode": {
        "type": "STRING",
        "label": "Bank code of a bank",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "account": {
        "type": "MAP",
        "label": "The account instance, should have the bankCode value",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.core.model.AccountDto"
      },
      "bankDetail": {
        "type": "MAP",
        "label": "Info about selected bank with fields bankName, registrationNumber, certis, bankAddress [streetCombined, zipCode, city, country], mobilityAddress [streetCombined, zipCode, city, department].",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.mobilita.bankdetail.dto.BankDetailDto"
      }
    },
    "location": "comp/field/bankaddressfield/bankaddressfield.js",
    "application": "mobilita",
    "documentation": "SMART_UIF006+bank-address-field",
    "properties": [
      {
        "name": "watchedAttributes",
        "label": "Collection of watched attributes.",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "bank-book-field",
    "label": "The field displays a list of bank book.",
    "model": {
      "cluid": {
        "type": "STRING",
        "label": "cluid of the client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "client": {
        "type": "MAP",
        "label": "The client",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.her.client.dto.ClientDTO"
      },
      "productList": {
        "type": "LIST",
        "label": "Output object with client bank book products (products wit PRODUCT_AGENDA CODE 4V or 4Z)",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.ProductDto"
      }
    },
    "location": "comp/field/bankbookfield/bankbookfield.js",
    "application": "her",
    "documentation": "SMART_UIF033+bank-book-field",
    "properties": [
      {
        "name": "debugCluid",
        "label": "Cluid, use only for Debug purposes",
        "defaultValue": "1997-04-09-17.02.09.449821",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "isBringLabel",
        "label": "Label for boolean value for bank books was bring.",
        "defaultValue": "Přinesl pozůstalý",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "numberBankBookLabel",
        "label": "Label for bank book number",
        "defaultValue": "Číslo vkladní knížky",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "duidLabel",
        "label": "Label for DUID.",
        "defaultValue": "DUID",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addButtonLabel",
        "label": "Text for button add bank book.",
        "defaultValue": "Přidat vkladní knížku",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "processButtonLabel",
        "label": "Text for button process bank books.",
        "defaultValue": "Zaregistrovat do ESPISu",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "emptyLabel",
        "label": "Text for empty products.",
        "defaultValue": "Nenašli jsme žádnou vkladní knížku.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "bankbookErrorLabel",
        "label": "Text for required error.",
        "defaultValue": "Je povinné vyplnit DUID.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "includeClosedInstances",
        "label": "Flag which controls calling cgp service for closed instances (including deleted + closed + notAlive instances) - used ONLY for manual addition of bankbook by bankbookNumber",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "binary-field",
    "label": "The field download file generate from binary content of attribute",
    "model": {
      "content": {
        "type": "TEXT",
        "label": "The binary content for file",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "downloadButtonPushed": {
        "type": "BOOLEAN",
        "label": "Boolean if the download button was pushed.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/binary/binary.js",
    "application": null,
    "documentation": "SMART_UIF061+binary-field",
    "properties": [
      {
        "name": "fileExtension",
        "label": "The choosen file extension",
        "defaultValue": "txt",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "mimeType",
        "label": "The choosen mimeType of file",
        "defaultValue": "text/plain",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "buttonLabel",
        "label": "Download button label",
        "defaultValue": "Stáhnout",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "fileName",
        "label": "Download file name",
        "defaultValue": "BinaryFile",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "template",
        "label": "Freemarkeer template",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "boolean-field",
    "label": "The field handles the true/false value. It can also contain the link to open new browser window. Typically it is used to perform the operation in external system and then confirmation after the operation is done.",
    "model": {
      "value": {
        "type": "BOOLEAN",
        "label": "The field stores true or false value",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/bool/bool.js",
    "application": null,
    "documentation": "SMART_UIF002+boolean-field",
    "properties": [
      {
        "name": "buttonVisible",
        "label": "Indicates whether to display button or not",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "buttonLabel",
        "label": "Label of the confirm button",
        "defaultValue": "Hotovo",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "linkLabel",
        "label": "Label of the link in the external system",
        "defaultValue": "odkaz",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "url",
        "label": "Contains string expression with url to the external system",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeActivity",
        "label": "Closes the activity the field is in. It can contain values: true, false or expression.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "additionalText",
        "label": "Additional text which is displayed on the right side of the button",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "colWidth",
        "label": "Button width in columns",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "oldSchool",
        "label": "Old version checkbox",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "buttongroup-field",
    "label": "The field displays list of the buttons. More than one attribute can be selected at time. The button has the following attributes: key, label, editable",
    "model": {
      "values": {
        "type": "MAP",
        "label": "The field stores map of the booleans",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/buttongroup/buttongroup.js",
    "application": null,
    "documentation": "SMART_UIF003+buttongroup-field",
    "properties": [
      {
        "name": "layoutDirection",
        "label": "Sets direction of layout to horizontal or vertical",
        "defaultValue": "horizontal",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "buttons",
        "label": "The list of the buttons. Property icon is optional. List of icons is here: http://getbootstrap.com/components/. Use only the last part of glyphicon name without 'glyphicon-'.",
        "defaultValue": [],
        "exampleValue": [
          {
            "key": "h1",
            "label": "Hodnota A",
            "required": true,
            "icon": "star"
          },
          {
            "key": "h2",
            "label": "Hodnota B",
            "icon": "envelope"
          }
        ],
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "buttonSize",
        "label": "If we use definition of button size",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "buttonWidth",
        "label": "Width of the button (small, base, large)",
        "defaultValue": "small",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "buttonLine",
        "label": "Height in line of the button 1-4",
        "defaultValue": "1",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "oldSchool",
        "label": "Old version checkbox",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "iconSize",
        "label": "Icon size: small, base, large or number of font-size in 'px'.",
        "defaultValue": "xs",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "hideCheckox",
        "label": "Hide checkbox in normal (not old) version.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "casehistory-field",
    "label": "The field displays list of all tasks connected with the case.",
    "model": {
      "tasks": {
        "type": "LIST",
        "label": "The list of the tasks shown. (output only)",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.bpm.service.HumanTaskDto"
      },
      "clientTasks": {
        "type": "LIST",
        "label": "The list of the client tasks shown. (output only)",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.bpm.service.HumanTaskDto"
      },
      "runnerTasks": {
        "type": "LIST",
        "label": "The list of the runner tasks shown. (output only)",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.bpm.service.HumanTaskDto"
      },
      "lastOwner": {
        "type": "STRING",
        "label": "The userId of the last person updating the task specified. The task is specified by fillUserNameOnTaskId property. (output only)",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/casehistory/casehistory.js",
    "application": null,
    "documentation": "SMART-789",
    "properties": [
      {
        "name": "debugCidla",
        "label": "Cidla, use only for Debug purposes",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "labels",
        "label": "The component labels",
        "defaultValue": {
          "titleState": "stav",
          "titleDateStart": "od",
          "titleDateEnd": "do",
          "titleAction": "Akce",
          "titleContactPerson": "kontaktní osoba",
          "notFoundLabel": "Nenalezeno.",
          "claimButton": "Převzít",
          "expireRunnerTaskButton": "Expirovat",
          "startNowRunnerTaskButton": "Nastartovat",
          "killRunnerTaskButton": "Ukončit",
          "showDetailButton": "Detail",
          "actionsMenu": "Možnosti",
          "potentialOwners": "Fronty",
          "businessAdministrator": "Administrator",
          "excludedOwners": "Vyloučení řešitelé",
          "calendarId": "Kalendářové ID",
          "priority": "Priorita",
          "latestAssigningDate": "Přiřadit do",
          "earliestAssigningDate": "Přiřadit od",
          "dueDate": "Vyřešit do",
          "suspendedUntil": "Odloženo do",
          "name": "Technické jméno",
          "claimQuestion": "Opravdu chcete převzít úkol, který je přiřazen na uživateli",
          "claimQuestionTitle": "Převzít úkol"
        },
        "exampleValue": null,
        "mergeDefault": true,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "displayMode",
        "label": "Describe what task to show. Possible values: ALL, ACTIVE, FINISHED",
        "defaultValue": "ALL",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "displayUserForActiveOnly",
        "label": "Shows the user for the active task only.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "fillUserNameOnTaskName",
        "label": "Specify the task name used connected with lastOwner attribute logic. When null then the attribute lastOwner is not filled.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "claimInNewWindow",
        "label": "Claim opens the new Window",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "claimEnabledRoles",
        "label": "Specify the list of the roles enabled for the task claim (when the current user has an task potential owner role).",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "claimTasksOfOthersEnabledRoles",
        "label": "Specify the list of the roles enabled for claiming the task which is 'in progress/' belongs to someone else (when the current user has an task potential owner role).",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showClientTasks",
        "label": "Specify whether to display also client tasks",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "startRunnerTaskRoles",
        "label": "Specify the list of the roles enabled for the runner task start now button.",
        "defaultValue": [
          "BRASIL_UNO_SmartCase_Designer",
          "BRASIL_UNO_SMART_APFaultHT"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "expireRunnerTaskRoles",
        "label": "Specify the list of the roles enabled for the runner task expire button.",
        "defaultValue": [
          "BRASIL_UNO_SmartCase_Designer",
          "BRASIL_UNO_SMART_APFaultHT"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "killRunnerTaskRoles",
        "label": "Specify the list of the roles enabled for the runner task kill button.",
        "defaultValue": [
          "BRASIL_UNO_SmartCase_Designer",
          "BRASIL_UNO_SMART_APFaultHT"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "claimRunnerTaskRoles",
        "label": "Specify the list of the roles enabled for the runner task claim button.",
        "defaultValue": [
          "BRASIL_UNO_SmartCase_Designer",
          "BRASIL_UNO_SMART_APFaultHT"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "killRunnerTaskRoles",
        "label": "Specify the list of the roles enabled for the runner task kill button.",
        "defaultValue": [
          "BRASIL_UNO_SmartCase_Designer",
          "BRASIL_UNO_SMART_APFaultHT"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "claimRunnerTaskRoles",
        "label": "Specify the list of the roles enabled for the runner task claim button.",
        "defaultValue": [
          "BRASIL_UNO_SmartCase_Designer",
          "BRASIL_UNO_SMART_APFaultHT"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "statusLanguage",
        "label": "Translate status of process",
        "defaultValue": {
          "CREATED": "vytvořený",
          "READY": "vytvořený",
          "RESERVED": "přiřazený",
          "IN_PROGRESS": "rozpracovaný",
          "COMPLETED": "dokončený",
          "SUSPENDED": "odložený",
          "EXITED": "zrušený",
          "FAILED": "zrušený",
          "ERROR": "chybný",
          "ACTIVE": "aktivní",
          "PROCESSED": "dokončený",
          "REJECTED": "zamítnutý",
          "CANCELLED": "zamítnutý bankou",
          "EXPIRED": "expirovaný",
          "OBSOLETE": "zastaralý"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "runnerStatusLanguage",
        "label": "Translate status of the runner/automatic tasks",
        "defaultValue": {
          "CREATED": "vytvořený",
          "RUNNING": "běžící",
          "COMPLETED": "ukončený",
          "REPEATING": "opakující",
          "HUMANTASK": "přeměněný v uživatelský úkol",
          "TERMINATED": "ukončený",
          "FAILED": "ukončený s chybou"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showRunnerTasks",
        "label": "Show runner/automatic tasks.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showTasksMode",
        "label": "Specify the display mode of tasks. IMAGE means show the icon before the task.",
        "defaultValue": "IMAGE",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "casemodelselector-field",
    "label": "",
    "model": {
      "caseType": {
        "type": "MAP",
        "label": "Selected case type",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "client": {
        "type": "MAP",
        "label": "Selected client",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.PersonDto"
      },
      "company": {
        "type": "MAP",
        "label": "Selected company",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.CompanyDto"
      },
      "product": {
        "type": "MAP",
        "label": "Selected client",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.ProductDto"
      },
      "notFound": {
        "type": "BOOLEAN",
        "label": "Not found button pressed",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/casemodelselectorfield/casemodelselectorfield.js",
    "application": null,
    "documentation": "",
    "properties": [
      {
        "name": "watchedAttributes",
        "label": "watched attributes. The list of coma separated output attribute names.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeActivity",
        "label": "Closes the activity the field is in. It can contain values: true, false or expression.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showFullTextSearch",
        "label": "If fulltext search is visible",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showStartCaseButton",
        "label": "If start button is visible",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showTechnicalColumns",
        "label": "If technical columns are shown",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showMyCaseTypeInResults",
        "label": "If my case type is shown in the table",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "labels",
        "label": "The component labels",
        "defaultValue": {
          "tableLabel": "Název",
          "tableName": "Technické jméno",
          "tableDescription": "Popis",
          "tableActions": "Akce",
          "tableTag": "Tagy",
          "startButton": "Start",
          "selectButton": "Vybrat",
          "unSelectButton": "Zrušit výběr",
          "filterLabel": "Filter",
          "filterPlaceholder": "Hledat...",
          "noCaseTypeFound": "Žádný druh případu neodpovídá zadaným parametrům.",
          "showAllCtButton": "Zobrazit všechno",
          "ctNotFoundButton": "Hledaný druh případu není v seznamu",
          "tooManyCaseTypesFound": "Bylo nalezeno příliš mnoho druhů případů. Zkuste omezit jejich počet pomocí filtru."
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeActivity",
        "label": "Closes the activity the field is in. It can contain values: true, false or expression.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "getOnlyRequisition",
        "label": "Server side filtering for cases having requisition.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showCtToCount",
        "label": "Shows list of unfiltered case types from size",
        "defaultValue": 10,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showFilteredCtToCount",
        "label": "Shows list of filtered case types from size",
        "defaultValue": 50,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showNoCaseFoundButton",
        "label": "If ctNotFound button is visible",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "checklist-field",
    "label": "Displays questions with comments for each question.",
    "model": {
      "answers": {
        "type": "LIST",
        "label": "The output list of questions with answers and comments.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "commentsAreSaved": {
        "type": "BOOLEAN",
        "label": "Output boolean if all comments are 'saved'.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "userAddedComments": {
        "type": "BOOLEAN",
        "label": "Output boolean if the current user added comment to each visible question.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/checklist/checklist.js",
    "application": null,
    "documentation": "",
    "properties": [
      {
        "name": "defaultButtons",
        "label": "The list of the buttons with key and label.",
        "defaultValue": [
          {
            "key": true,
            "label": "Ano"
          },
          {
            "key": false,
            "label": "Ne"
          }
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "questions",
        "label": "The list of questions. Each question has to contain property 'id' and 'question' and may contain property 'buttons' to replace 'defaultButtons'.",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "clients-field",
    "label": "The field displays all clients attached to displayed LoanConditionsCase. Also handles adding/removing/refreshing clients",
    "model": {
      "cidla": {
        "type": "STRING",
        "label": "Cidla for case",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/clientsfield/clientsfield.js",
    "application": "cedr",
    "documentation": "",
    "properties": [
      {
        "name": "addClientLabel",
        "label": "Label for button that add new client.",
        "defaultValue": "Přidat osobu",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "multiple",
        "label": "Boolean value if user can add only one client or unlimitided number of them.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "labels",
        "label": "Labels for field and popup",
        "defaultValue": {
          "clients": "Klienti",
          "addClientLabel": "Přidat osobu"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "codebook-field",
    "label": "Displays the values of the codebook (RDS) in combo box. Do not use this field if there is more than 100 values.",
    "model": {
      "value": {
        "type": "STRING",
        "label": "The field stores key value of the codebook",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "masterValue": {
        "type": "STRING",
        "label": "The field stores value that can be used for filtering. It is optional.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/codebook/codebook.js",
    "application": null,
    "documentation": "SMART_UIF004+codebook-field",
    "properties": [
      {
        "name": "codebookName",
        "label": "Name of the codebook. For examle CB_PartyType",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "defaultValue",
        "label": "The default value, typically is null or one of the id from the entries",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "filterFunction",
        "label": "It is optional expression to filter values to display. Example: 'getItem(item,\"state\")==masterValue or isEmpty(masterValue)'",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "colWidth",
        "label": "Set width of codebook field min 1 max 12.",
        "defaultValue": 3,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "collection-orders-field",
    "label": "The field for list of collection orders.",
    "model": {
      "orders": {
        "type": "LIST",
        "label": "The list of orders. In each order should be an object with variables: TBD.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/collectionorders/collectionordersfield.js",
    "application": "mobilita",
    "documentation": "SMART_UIF034+collection-orders-field",
    "properties": [
      {
        "name": "foreign",
        "label": "The type of orders: domestic (false) or foreign (true)",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "displaySeparator",
        "label": "Whether to show the horizontal line after component.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "transactionTypeCodebook",
        "label": "The codebook of allowed transactionTypes",
        "defaultValue": [
          {
            "id": "S",
            "value": "SIPO"
          },
          {
            "id": "O",
            "value": "O2"
          },
          {
            "id": "I",
            "value": "Inkaso"
          }
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "combobox-field",
    "label": "Displays the list of the defined values in combo box. Do not use this field if there is more than 100 values. Each entry has the following attributes: id,label",
    "model": {
      "values": {
        "type": "LIST",
        "label": "Optional attribute contains list of the entries. This list appears in options property as entries",
        "direction": null,
        "supportsAny": true,
        "structureType": null
      },
      "selectedValue": {
        "type": "STRING",
        "label": "The field stores id of the entry",
        "direction": null,
        "supportsAny": true,
        "structureType": null
      },
      "masterValue": {
        "type": "STRING",
        "label": "The field stores value that can be used for filtering. It is optional.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/combobox/combobox.js",
    "application": null,
    "documentation": "SMART_UIF005+combobox-field",
    "properties": [
      {
        "name": "entries",
        "label": "Entries",
        "defaultValue": [],
        "exampleValue": [
          "Value1",
          "Value2",
          "Value3"
        ],
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "entriesURL",
        "label": "Get entries from url.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "entriesURLMethod",
        "label": "Http method to get entries from url.",
        "defaultValue": "POST",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "attributeValueEntries",
        "label": "Entries made from attribute values. Contains array of attribute names.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "defaultValue",
        "label": "The default value, typically is null or one of the id from the entries",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "options",
        "label": "Angular expression to select display values and key from the collection. See the following page to complete documentation: https://docs.angularjs.org/api/ng/directive/ngOptions",
        "defaultValue": "entry for entry in entries.value",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "filterFunction",
        "label": "It is optional expression to filter values to display. Example: 'getItem(item,\"state\")==masterValue or isEmpty(masterValue)'",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "colWidth",
        "label": "Set width of combobox field min 1 max 12.",
        "defaultValue": 3,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "trackBy",
        "label": "Object value track by some field in entry, multiple field with + between ",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "company-field",
    "label": "The field displays info about the company. The field supports searching company in CRM",
    "model": {
      "cluid": {
        "type": "STRING",
        "label": "cluid of the company",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "relatedPersonCluid": {
        "type": "STRING",
        "label": "cluid of the related person (read only & watched)",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "client": {
        "type": "MAP",
        "label": "company",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.CompanyDto"
      }
    },
    "location": "comp/field/company/company.js",
    "application": null,
    "documentation": "SMART_UIF028+company-field",
    "properties": [
      {
        "name": "visibleItems",
        "label": "Optional flags (image, name, address, cluid, registrationNumber, phoneNumber, email) describing visibilities of company-field attributes (image, name, address, cluid, registration number, phone number, email). If not set all attributes are visible.",
        "defaultValue": {
          "image": true,
          "name": true,
          "address": true,
          "cluid": true,
          "registrationNumber": true,
          "phoneNumber": true,
          "email": true,
          "link": false
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "searchLabel",
        "label": "Label for the Search button",
        "defaultValue": "Vyhledat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showSearchButton",
        "label": "Flag to show/hide search button.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "clearLabel",
        "label": "Label for the Clear button",
        "defaultValue": "Nové zadání",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showClearButton",
        "label": "Flag to show/hide clear button.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "modalTitleLabel",
        "label": "The Title of the modal window",
        "defaultValue": "Vyhledání firmy",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "nameLabel",
        "label": "Label for the result table column Name in the modal window",
        "defaultValue": "Jméno",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "cluidLabel",
        "label": "Label for the result table column CLUID in the modal window",
        "defaultValue": "CLUID",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "registrationNumberLabel",
        "label": "Label for the result table column Registration number in the modal window",
        "defaultValue": "IČO",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "personalIdLabel",
        "label": "Label for the result table column Personal ID in the modal window",
        "defaultValue": "Rodné číslo",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addressLabel",
        "label": "Label for the result table column Address in the modal window",
        "defaultValue": "Addresa",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "actionsLabel",
        "label": "Label for the result table column Actions in the modal window",
        "defaultValue": "Akce",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectLabel",
        "label": "Label for the Select button in the result table in the modal window",
        "defaultValue": "Vybrat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "cancelLabel",
        "label": "Label for Cancel button in the modal window",
        "defaultValue": "Storno",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "msgSystemNotAvailableLabel",
        "label": "Message displayed when the system is not available and does not return any result",
        "defaultValue": "Backend systém není dostupný, data bude nutno zadat ručně.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "resultLabel",
        "label": "Label shown when the search returned some result",
        "defaultValue": "Výsledky vyhledávání",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "noResultLabel",
        "label": "Label shown when the search returned no result",
        "defaultValue": "Žádné výsledky",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "cluidPrefix",
        "label": "Label for the CLUID in the main view.",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "registrationNumberPrefix",
        "label": "Label for the registration number in the main view.",
        "defaultValue": "IČO: ",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "phoneNumberPrefix",
        "label": "Label for the phone number in the main view.",
        "defaultValue": "Tel.: ",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "emailPrefix",
        "label": "Label for the email in the main view.",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "openCRMLabel",
        "label": "Label for CRM link",
        "defaultValue": "Otevřít v CRM",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "compute-field",
    "label": "The field compute an expression and store the result into attribute(s) selected",
    "model": {},
    "location": "comp/field/compute/compute.js",
    "application": null,
    "documentation": "SMART_UIF024+compute-field",
    "properties": [
      {
        "name": "condition",
        "label": "Condition on when to compute an expression",
        "defaultValue": "true",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "expression",
        "label": "Transition like expression.",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "outputAttributes",
        "label": "Transition like output attributes. The list of coma separated output attribute names.",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "inputAttributes",
        "label": "The input attribute passed into expression. The expression is evaluated on each attribute value change.",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showError",
        "label": "Boolean value if you wanna to show errors on the web page",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "errorMessage",
        "label": "The error message shown to user",
        "defaultValue": "Chyba ve výpočtu.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "conditions-field",
    "label": "Field displays all conditions attached to current LoanConditionCase. Contains filtering and addition/adjustmens of given conditions",
    "model": {
      "cidla": {
        "type": "STRING",
        "label": "Cidla for case",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "account": {
        "type": "STRING",
        "label": "Account for case",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "ignoreUrgency": {
        "type": "BOOLEAN",
        "label": "If ignore urgency",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "fromWS": {
        "type": "BOOLEAN",
        "label": "If ignore urgency",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/conditionsfield/conditionsfield.js",
    "application": "cedr",
    "documentation": "",
    "properties": [
      {
        "name": "labels",
        "label": "Labels for field and popup",
        "defaultValue": {
          "drawingConditions": "Čerpací podmínky",
          "unbindingConditions": "Vyvazovací podmínky",
          "subsequentConditions": "Následné podmínky",
          "transe": "Tranše",
          "conditionEditTitle": "Upravit podmínku",
          "conditionNewTitle": "Vytvořit novou podmínku",
          "addButton": "Uložit",
          "createConditionButton": "Vytvořit",
          "reset": "Resetovat vyhledávání",
          "cancel": "Cancel",
          "addDuidTitle": "Přiložit dokument",
          "closeButton": "Zavřít",
          "changeConfigButton": "Změna konfigurace",
          "cancelConButton": "Zneplatnit podmínku",
          "cancelConButtonShort": "Zneplatnit",
          "addCondition": "Přidat podmínku",
          "editCondition": "Upravit podmínku",
          "documentAddTitle": "Přidat dokument",
          "addDocumentButton": "Přidat",
          "saveAll": "Uložit",
          "conditions": "Podmínky",
          "saveAndActualization": "Uložit a aktualizovat"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "fullEditationRoles",
        "label": "List of roles that have full editation over conditions.",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "control-conditions-field",
    "label": "",
    "model": {
      "taskId": {
        "type": "STRING",
        "label": "taskId",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "isSeniorTask": {
        "type": "BOOLEAN",
        "label": "isSeniorTask",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/controlconditionsfield/controlconditionsfield.js",
    "application": "cedr",
    "documentation": "",
    "properties": [
      {
        "name": "labels",
        "label": "Labels for field and popup",
        "defaultValue": {
          "conditionEditTitle": "Upravit podmínku",
          "addButton": "Uložit",
          "closeButton": "Zavřít",
          "changeConfigButton": "Změna konfigurace",
          "cancelConButton": "Zneplatnit podmínku",
          "addCondition": "Přidat podmínku",
          "documentAddTitle": "Přidat dokument",
          "addDocumentButton": "Přidat",
          "mortgageAgreement": "Úvěrová smlouva",
          "dateOfSign": "Datum podpisu úvěrové smlouvy",
          "dateOfEnd": "Datum konce čerpání",
          "firstDisbursement": "Datum prvního čerpání",
          "lastDisbursement": "Datum posledního čerpání",
          "cancel": "Cancel",
          "addDuidTitle": "Zadat úvěrovou smlouvu"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "csv-import-field",
    "label": "The field for importing csv file and its processing into LIST of objects. Calls the service with endpoint specified in property uri.",
    "model": {
      "csvList": {
        "type": "LIST",
        "label": "The collection of objects created from parsed csv file.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "error": {
        "type": "BOOLEAN",
        "label": "The attribute is set to true if the service call failed.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "warning": {
        "type": "BOOLEAN",
        "label": "The attribute is set to true if the job was finished with some errors.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "success": {
        "type": "BOOLEAN",
        "label": "The attribute is set to true if the service call completed successfully.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/csvimportfield/csvimportfield.js",
    "application": "mobilita",
    "documentation": "SMART_UIF???+csv-import-field",
    "properties": [
      {
        "name": "uri",
        "label": "Service endpoint URL",
        "defaultValue": "mobilita/api/job/mobilityOnetimeJob",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "jobParams",
        "label": "Parameters of the job called with the parsed file",
        "defaultValue": {
          "jobType": "MOCK_CSV",
          "separator": ",",
          "withErrors": "false"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "descriptionLabel",
        "label": "Label for description of task",
        "defaultValue": "Vyberte soubor csv nebo txt, který se pošle do služby",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectFileLabel",
        "label": "Label for select file button",
        "defaultValue": "Vyberte soubor...",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "successLabel",
        "label": "Label for success indicator",
        "defaultValue": "OK",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "warningLabel",
        "label": "Label for finished with warning indicator",
        "defaultValue": "DOKONČENO S CHYBAMI",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "errorLabel",
        "label": "Label for error indicator",
        "defaultValue": "CHYBA",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "reloadLabel",
        "label": "Label for reload log button",
        "defaultValue": "Zobrazit importované případy",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "isInTest",
        "label": "Show file input element for test",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeActivity",
        "label": "Closes the activity the field is in. It can contain values: true, false or expression.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "multipleUpload",
        "label": "If it possible to upload more then one file",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "date-field",
    "label": "The field shows the field with the calendar popup. The field also validates the date input.",
    "model": {
      "value": {
        "type": "DATE",
        "label": "The field stores date value",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "minDate": {
        "type": "DATE",
        "label": "Defines the minimum available date. Requires a Date object.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "maxDate": {
        "type": "DATE",
        "label": "Defines the maximum available date. Requires a Date object.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "initDate": {
        "type": "DATE",
        "label": "Defines the initial date. Requires a Date object.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/date/date.js",
    "application": null,
    "documentation": "SMART_UIF007+date-field",
    "properties": [
      {
        "name": "dateExpression",
        "label": "Expression to allow specific dates e.g. '_date.date>=5 and _date.date<=20' Date is in attribute '_date' which contains: day (1=Monday, 7=Sunday), date (1-31), month (1-12), year, time (number of milliseconds since midnight January 1, 1970)",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "initDate",
        "label": "Defines the initial date. Requires 'today' or null. Can be overridden by initDate attribute.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "initDateDif",
        "label": "Number of days to add to initDate. Can be positive, negative or 0.",
        "defaultValue": 0,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "initDateDifUnit",
        "label": "Controls whether initDateDif is CALENDAR days or LABOUR days.",
        "defaultValue": "CALENDAR",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "minDate",
        "label": "Defines the minimum available date. Requires 'today' or null. Can be overridden by minDate attribute.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "minDateDif",
        "label": "Number of days to add to minDate. Can be positive, negative or 0.",
        "defaultValue": 0,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "minDateDifUnit",
        "label": "Controls whether minDateDif is CALENDAR days or LABOUR days.",
        "defaultValue": "CALENDAR",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "maxDate",
        "label": "Defines the maximum available date. Requires 'today' or null. Can be overridden by maxDate attribute.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "maxDateDif",
        "label": "Number of days to add to maxDate. Can be positive, negative or 0.",
        "defaultValue": 0,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "maxDateDifUnit",
        "label": "Controls whether maxDateDif is CALENDAR days or LABOUR days.",
        "defaultValue": "CALENDAR",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "dateFormats",
        "label": "All input date formats. Exclamation mark causes that input can be '1' or '01' for day or month.",
        "defaultValue": [
          "d!.M!.yyyy",
          "d!. M!. yyyy",
          "d!. M!.yyyy",
          "d!.M!. yyyy",
          "d!/M!/yyyy"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "colWidth",
        "label": "Set width of date field input min 1 max 12.",
        "defaultValue": 3,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowManualEntry",
        "label": "Allow manual entry and click to input",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "watchedAttributes",
        "label": "Collection of watched attributes",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "endOfDay",
        "label": "Set time to 23:59:59",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "date-time-field",
    "label": "The field shows the field with the calendar popup and time input. The field also validates the date input.",
    "model": {
      "value": {
        "type": "DATE",
        "label": "The field stores date value",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "minDate": {
        "type": "DATE",
        "label": "Defines the minimum available date. Requires a Date object.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "maxDate": {
        "type": "DATE",
        "label": "Defines the maximum available date. Requires a Date object.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/datetime/datetime.js",
    "application": null,
    "documentation": "SMART_UIF007+date-time-field",
    "properties": [
      {
        "name": "minDate",
        "label": "Defines the minimum available date. Requires 'today' or null. Can be overridden by minDate attribute.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "minDateDif",
        "label": "Number of days to add to minDate. Can be positive, negative or 0.",
        "defaultValue": 0,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "minDateDifUnit",
        "label": "Controls whether minDateDif is CALENDAR days or LABOUR days.",
        "defaultValue": "CALENDAR",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "maxDate",
        "label": "Defines the maximum available date. Requires 'today' or null. Can be overridden by maxDate attribute.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "maxDateDif",
        "label": "Number of days to add to maxDate. Can be positive, negative or 0.",
        "defaultValue": 0,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "maxDateDifUnit",
        "label": "Controls whether maxDateDif is CALENDAR days or LABOUR days.",
        "defaultValue": "CALENDAR",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "dateFormats",
        "label": "All input date formats. Exclamation mark causes that input can be '1' or '01' for day or month.",
        "defaultValue": [
          "d!.M!.yyyy",
          "d!. M!. yyyy",
          "d!. M!.yyyy",
          "d!.M!. yyyy",
          "d!/M!/yyyy"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "colWidthDate",
        "label": "Set width of date field input min 1 max 12.",
        "defaultValue": 3,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "colWidthTime",
        "label": "Set width of date field input min 1 max 12.",
        "defaultValue": 3,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "hourStep",
        "label": "How many hours is plus in one step",
        "defaultValue": 1,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "minuteStep",
        "label": "How many minutes is plus in one step",
        "defaultValue": 1,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "secondStep",
        "label": "How many seconds is plus in one step",
        "defaultValue": 10,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "isMeridian",
        "label": "Whether to display 12H or 24H mode.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "isArrows",
        "label": "Whether to display arrow.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "seconds",
        "label": "Show seconds input",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "decimal-field",
    "label": "The field shows the field for the numeric input. The field also validates the decimal data type",
    "model": {
      "value": {
        "type": "DECIMAL",
        "label": "inserted number",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/decimal/decimal.js",
    "application": null,
    "documentation": "SMART_UIF008+decimal-field",
    "properties": [
      {
        "name": "isInteger",
        "label": "Limit input to integers.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "integerDigits",
        "label": "Set max number of digits in integer input.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowNegativeNumber",
        "label": "Allow/disallow negative number.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "maxDecimalPlaces",
        "label": "The maximal count of decimal places.",
        "defaultValue": 2,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "formatNumber",
        "label": "Format number - separate thousands. Example: '1 234 567 890,123456789'",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "distribution-channel-field",
    "label": "Displays allowed distribution channels and enables to choose one.",
    "model": {
      "docToSign": {
        "type": "BOOLEAN",
        "label": "Set true if any of documents need to be signed",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "cluid": {
        "type": "STRING",
        "label": "cluid of the client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "accountNumber": {
        "type": "STRING",
        "label": "account number of the client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "fullAccountNumber": {
        "type": "STRING",
        "label": "Full account number of the client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "selectedChannel": {
        "type": "STRING",
        "label": "Output attribute. Channel that has been selected",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "selectedAddress": {
        "type": "STRING",
        "label": "Output attribute. Adress that has been selected",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "selectedEmail": {
        "type": "STRING",
        "label": "Output attribute. Email that has been selected",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "emailVerified": {
        "type": "BOOLEAN",
        "label": "Outout attribute. Information about email verification.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "primaryUser": {
        "type": "STRING",
        "label": "Information about primary user of the client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/distributionchannel/distributionchannel.js",
    "application": "mnt",
    "documentation": "SMART+UIF068+distribution-channel-field",
    "properties": [
      {
        "name": "hideEmail",
        "label": "Hides email option",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "dms-field",
    "label": "The field displays simple document from DMS. The field also supports opening/downloading the document in DMS",
    "model": {
      "documentId": {
        "type": "STRING",
        "label": "No output. The field uses value as DMS identificator (documentId)",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/dms/dms.js",
    "application": null,
    "documentation": "SMART_UIF009+dms-field",
    "properties": [
      {
        "name": "showPreview",
        "label": "Displays the PDF document inlined into the task page",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showName",
        "label": "Indicates whether to display the name of PDF document with Open button",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "openLabel",
        "label": "Label for Open button",
        "defaultValue": "Otevřít",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "documentIdLabel",
        "label": "Label for Document ID field",
        "defaultValue": "ID dokumentu",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "documentRepository",
        "label": "Document Repository, see document CB_DocumentRepository",
        "defaultValue": "mortgages_sell",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "documents-field",
    "label": "The field displays set of the documents associated with the case. The field allows to add, update or delete the document from DMS",
    "model": {
      "documentIds": {
        "type": "LIST",
        "label": "List of the documentIds from DMS. It is input/output attribute based on property loadByDocumentIds.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.DocumentDto"
      },
      "overrideCidla": {
        "type": "STRING",
        "label": "Input String to override cidla.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "documents": {
        "type": "LIST",
        "label": "List of the DocumentDto. It is only output attribute.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.DocumentDto"
      }
    },
    "location": "comp/field/documents/documents.js",
    "application": null,
    "documentation": "SMART_UIF010+documents-field",
    "properties": [
      {
        "name": "documentRepository",
        "label": "Document Repository, see document CB_DocumentRepository",
        "defaultValue": "mortgages_sell",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "documentNameLabel",
        "label": "Label for the table column DocumentName",
        "defaultValue": "Jméno dokumentu",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "versionCreatedLabel",
        "label": "Label for the table column VersionCreated",
        "defaultValue": "Verze",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "documentTypeLabel",
        "label": "Label for the table column DocumentType",
        "defaultValue": "Typ",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "actionsLabel",
        "label": "Label for the table column Actions",
        "defaultValue": "Akce",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "actionButtonLabel",
        "label": "Label for the Action button",
        "defaultValue": "Akce",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "splitButtonLabel",
        "label": "Label for the Split button",
        "defaultValue": "Rozdělit!",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "downloadLabel",
        "label": "Label for the Download dropdown menu item",
        "defaultValue": "Stáhnout",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "deleteLabel",
        "label": "Label for the Delete dropdown menu item",
        "defaultValue": "Smazat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "updateLabel",
        "label": "Label for the Update... dropdown menu item",
        "defaultValue": "Nahradit",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addLabel",
        "label": "Label for the Add button",
        "defaultValue": "Přidat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "modalTitleLabel",
        "label": "The Title of the modal window for add document.",
        "defaultValue": "Přidat dokument...",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "modalTitleLabelForUpdate",
        "label": "The Title of the modal window for update document.",
        "defaultValue": "Nahradit dokument...",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "documentToUploadLabel",
        "label": "The label for the input for file uploading in the modal window",
        "defaultValue": "Výběr dokumentu",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "uploadFileLabel",
        "label": "The label for the placeholder of the input for file uploading in the modal window",
        "defaultValue": "Nahrát soubor",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "cancelLabel",
        "label": "Label for Cancel button in the modal window",
        "defaultValue": "Storno",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "copyToEspisLabel",
        "label": "Label for 'copy to ESPIS' button in the modal window.",
        "defaultValue": "Kopírovat dokument do ESPISu.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "chooseDocumentType",
        "label": "Label for choose document type in the modal window",
        "defaultValue": "Vyberte typ dokumentu",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "documentsFilter",
        "label": "It is optional expression to filter documents to display. Example: 'getItem(item, \"documentType\")==\"013\"'",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowedRecordTypes",
        "label": "Allowed list of CB_DocumentType for new files. Each document type is defined as string value.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "actionDownloadAvailable",
        "label": "Show download button.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "actionDeleteAvailable",
        "label": "Show delete button.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "actionUpdateAvailable",
        "label": "Show update button.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "actionCopyToEspisAvailable",
        "label": "Show button for copy document to ESPIS.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "watchedAttributes",
        "label": "Collection of watched attributes. After change one of these attributes, the records will be reloaded.",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "loadByDocumentIds",
        "label": "If it is true then documents are loaded by attribute 'documentIds' and the result is saved into attribute 'documents'.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "copyToEspisTitlePopup",
        "label": "Label for a title of a popup to copy a document to espis.",
        "defaultValue": "Kopírovat dokument do ESPISu",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "copyToEspisCopyButton",
        "label": "Label for copy button in a popup to copy a document to espis.",
        "defaultValue": "Kopírovat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "copyToEspisCancelButton",
        "label": "Label for cancel button in a popup to copy a document to espis.",
        "defaultValue": "Zrušit",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "copyToEspisDuid",
        "label": "Label for DUID input in a popup to copy a document to espis.",
        "defaultValue": "DUID",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showDuidColumn",
        "label": "Show/hide a column with DUIDs.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "duidLabel",
        "label": "Label for a column with DUIDs.",
        "defaultValue": "DUID",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "documents-selector-field",
    "label": "Field show collection of documents for select",
    "model": {
      "documents": {
        "type": "LIST",
        "label": "The collection of documents",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.RecordDto"
      },
      "duids": {
        "type": "LIST",
        "label": "The collection of duid for document",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.RecordDto"
      },
      "documentsSelect": {
        "type": "LIST",
        "label": "The output is the list of the selected documents.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.RecordDto"
      }
    },
    "location": "comp/field/documentsselectorfield/documentsselectorfield.js",
    "application": null,
    "documentation": "SMART_UIF051+documents-selector-field",
    "properties": [
      {
        "name": "filterFunction",
        "label": "It is optional expression to filter values to display. Example: 'getItem(item, \"accountNumber\") == \"0552329189\"'",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "conditionalFilterFunction",
        "label": "The map for conditional filter function",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showLabelInTableHeader",
        "label": "The flag controls the position of field label: in table header (true) or in a label in front of table (false).",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "watchedAttributes",
        "label": "Collection of watched attributes",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "drawing-conditions-field",
    "label": "",
    "model": {
      "cidla": {
        "type": "STRING",
        "label": "Cidla for case with product",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "account": {
        "type": "STRING",
        "label": "Account for case",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/drawingconditionsfield/drawingconditionsfield.js",
    "application": "cedr",
    "documentation": "",
    "properties": [
      {
        "name": "labels",
        "label": "Labels for field and popup",
        "defaultValue": {
          "title": "Kontrola čerpacích podmínek v procesu čerpání",
          "drawingConditions": "Čerpací podmínky",
          "unbindingConditions": "Vyvazovací podmínky",
          "subsequentConditions": "Následné podmínky",
          "transe": "Tranše",
          "saveAndActualization": "Uložit a aktualizovat",
          "addDuidTitle": "Zadat dokument",
          "duid": "DUID",
          "addButton": "Uložit",
          "cancel": "Zrušit"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "employment-reasons-field",
    "label": "Component for creating list of employment reasons of given person.",
    "model": {
      "employmentReasons": {
        "type": "LIST",
        "label": "Output collection of employment reasons",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/employmentreasonsfield/employmentreasonsfield.js",
    "application": "gdpr",
    "documentation": "SMART_UIF062+employment-reasons-field",
    "properties": [
      {
        "name": "tableLabels",
        "label": "label for reasons table",
        "defaultValue": {
          "nameOfPosition": "Název pracovní funkce",
          "startOfWork": "Počátek pracovního poměru",
          "endOfWork": "Ukončení pracovního poměru",
          "typeOfAgreement": "Druh smlouvy",
          "options": "Možnosti",
          "optionEdit": "Upravit",
          "optionDelete": "Smazat",
          "addReason": "Přidat"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "popupLabels",
        "label": "label for reasons popup",
        "defaultValue": {
          "title": "Přidání nového zaměstnaneckého důvodu",
          "nameOfPosition": "Název pracovní funkce",
          "startOfWork": "Počátek pracovního poměru",
          "endOfWork": "Ukončení pracovního poměru",
          "typeOfAgreement": "Druh smlouvy",
          "close": "Zavřít",
          "addReason": "Přidat",
          "saveReason": "Uložit",
          "phoneNumber": "Telefonní číslo",
          "email": "E-mail",
          "unionMember": "Člen odborů",
          "insuranceCompany": "Zdravotní pojišťovna",
          "address": "Adresa trvalého pobytu",
          "validTo": "Lhůta pro držení osobních údajů"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "esignature-field",
    "label": "Component with one button that open new window with signature component.",
    "model": {
      "documentIds": {
        "type": "LIST",
        "label": "List of componentId of documents.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.DocumentDto"
      },
      "duidList": {
        "type": "LIST",
        "label": "List of DUIDs.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.RecordDto"
      },
      "records": {
        "type": "LIST",
        "label": "List of RecordDto (output of recordlist-field). This attribute works as addition to duidList.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.RecordDto"
      },
      "esigCalled": {
        "type": "BOOLEAN",
        "label": "Output information if ESIG popup was opened.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "documentsSigned": {
        "type": "BOOLEAN",
        "label": "Output information if user clicked to the 'Sign' button but all documents were signed already and ESIG popup was not opened.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "errorOccurred": {
        "type": "BOOLEAN",
        "label": "Flag tells that records load, insert or upload failed.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/esignature/esignature.js",
    "application": null,
    "documentation": "SMART_UIF029+esignature-field",
    "properties": [
      {
        "name": "buttonLabel",
        "label": "Label for the main button.",
        "defaultValue": "Podepsat za banku",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "repositoryId",
        "label": "ID of repository where document is stored.",
        "defaultValue": "RS",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "appIdentity",
        "label": "Identity of primary application (values: DON, PS, CPS, BRASIL, OPTIS)",
        "defaultValue": "BRASIL",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "noDocumentToSignMessage",
        "label": "Message to show in popup if no document to sign is found.",
        "defaultValue": "Všechny dokumenty jsou už bankou podepsány.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "signingInProgressMessage",
        "label": "Message to show during the signing process.",
        "defaultValue": "Probíhá podepisování...",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeOnError",
        "label": "Closes the activity when error occurred.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "espis-field",
    "label": "The field displays simple document from ESPIS DUID. The field also supports opening/downloading the document in Espis. Also adding the new DUID is supported",
    "model": {
      "duid": {
        "type": "STRING",
        "label": "DUID identificator",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "errorOccurred": {
        "type": "BOOLEAN",
        "label": "Flag tells that insert or upload of record failed.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/espis/espis.js",
    "application": null,
    "documentation": "SMART_UIF011+espis-field",
    "properties": [
      {
        "name": "showPreview",
        "label": "Displays the PDF document inlined into the task page",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showName",
        "label": "Indicates whether to display the name of PDF document with Open button",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "openLabel",
        "label": "Label for Open button",
        "defaultValue": "Otevřít",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addLabel",
        "label": "Label for Add button",
        "defaultValue": "Přidat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowedRecordTypes",
        "label": "Allowed record types",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibleItems",
        "label": "The flag contains the visibility of the record types combo-boxes in add record popup.",
        "defaultValue": {
          "all": false,
          "allowed": true
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeOnError",
        "label": "Closes the activity when error occurred.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addRecordLabels",
        "label": "List of labels for dialog window add record",
        "defaultValue": {
          "title": "Přidat dokument",
          "type": "Typ dokumentu",
          "electronic": "Elektronický",
          "physical": "Fyzický",
          "exists": "Existující",
          "recordType": "Vyberte typ dokumentu",
          "upload": "Dokument k nahrání",
          "addButton": "Přidat",
          "cancel": "Zrušit",
          "duid": "DUID",
          "allowed": "Povolený",
          "all": "Vše"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "her-appointed-persons-field",
    "label": "The field displays a list of appointed persons to a particular client.",
    "model": {
      "cluid": {
        "type": "STRING",
        "label": "cluid of the client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "mainInheritor": {
        "type": "MAP",
        "label": "The current/main inheritor",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "productList": {
        "type": "LIST",
        "label": "List of products",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.her.service.AuthorizedProductDto"
      },
      "serviceCalled": {
        "type": "BOOLEAN",
        "label": "Output value if the service for load products was successfully called at least once.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/herappointedpersonsfield/herappointedpersonsfield.js",
    "application": "her",
    "documentation": "SMART_UIF035+her-appointed-persons-field",
    "properties": [
      {
        "name": "tableColumnNames",
        "label": "Header column names",
        "defaultValue": [
          "Product",
          "Account",
          "Share",
          "Description"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "loadPersonsActionName",
        "label": "Load persons",
        "defaultValue": "Load persons",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "productTypeLabels",
        "label": "Product type labels",
        "defaultValue": {
          "FLEXI": "Flexi",
          "PENSION_INSURENCE": "Pension insurence",
          "PENSION_SAVING": "Pension saving"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "her-client-info-field",
    "label": "Component consumes cluid of client and provide client detail informations such as phones, emails, addresses (and their types like 'permanent address' or 'primary phone' etc.)",
    "model": {
      "cluid": {
        "type": "STRING",
        "label": "The cluid of the client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "firstName": {
        "type": "STRING",
        "label": "Jmeno vyhledavaneho klienta",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "lastName": {
        "type": "STRING",
        "label": "Prijmeni vyhledavaneho klienta",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "personalId": {
        "type": "STRING",
        "label": "Rodne cislo vyhledavaneho klienta",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "clientInfo": {
        "type": "MAP",
        "label": "Objekt udrzujici informace o klientovi",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.her.client.dto.ClientDTO"
      }
    },
    "location": "comp/field/herclientinfofield/herclientinfofield.js",
    "application": "her",
    "documentation": "SMART_UIF036+her-client-info-field",
    "properties": [
      {
        "name": "debugCluid",
        "label": "Cluid, for debug purposes only",
        "defaultValue": "1997-04-09-17.06.50.369239",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibleItems",
        "label": "Parameters of client info search call. Values view - visible, data - load data, none - invisible",
        "defaultValue": {
          "searchAddress": "VIEW",
          "searchAlerts": "VIEW",
          "searchEmails": "VIEW",
          "searchPhones": "VIEW",
          "searchAgreements": "NONE",
          "amlProfile": "NONE"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "refreshButtonOnly",
        "label": "Flag used for disabling all component features except refreshButton",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "alwaysShowRefreshButton",
        "label": "Flag used to show refreshButton even editable is false.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "aggregateAlert",
        "label": "Allow show warnings in agregate format",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibleItemsPerson",
        "label": "Optional flags (cluid, image, nameSurname, address, personalId, cardType) describing visibilities of person-field attributes (cluid, image, nameSurname, address, personalId, cardType). If not set all attributes are visible.",
        "defaultValue": {
          "cluid": true,
          "image": true,
          "nameSurname": true,
          "address": true,
          "personalId": true,
          "link": true,
          "cardType": true
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "searchLabel",
        "label": "Label for Search Button",
        "defaultValue": "Vyhledat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "clearLabel",
        "label": "Label for Clear Button",
        "defaultValue": "Odebrat z případu",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "refreshLabel",
        "label": "Label for Refresh client info Button",
        "defaultValue": "Obnovit",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "noResultMessage",
        "label": "Message when the client is not found",
        "defaultValue": "Není vyhledán žádný klient",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "modalTitleLabel",
        "label": "The Title of the modal window",
        "defaultValue": "Vyhledání klienta",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "firstNameLabel",
        "label": "Label for First Name field in the modal window",
        "defaultValue": "Jméno",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "lastNameLabel",
        "label": "Label for Last Name field in the modal window",
        "defaultValue": "Příjmení",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "birthDateLabel",
        "label": "Label for Birth Date field in the modal window",
        "defaultValue": "Datum narození",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "personalIdLabel",
        "label": "Label for Personal Id field in the modal window",
        "defaultValue": "Rodné číslo",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "fullNameLabel",
        "label": "Label for the result table column Name in the modal window",
        "defaultValue": "Jméno a příjmení",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "cluidLabel",
        "label": "Label for the result table column CLUID in the modal window",
        "defaultValue": "CLUID",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "actionsLabel",
        "label": "Label for the result table column Actions in the modal window",
        "defaultValue": "Možnosti",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectLabel",
        "label": "Label for the Select button in the result table in the modal window",
        "defaultValue": "Vybrat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "cancelLabel",
        "label": "Label for Cancel button in the modal window",
        "defaultValue": "Storno",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "msgSystemNotAvailableLabel",
        "label": "Message displayed when the system is not available and does not return any result",
        "defaultValue": "CRM není dostupné, nelze vyhledávat klienty.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "resultLabel",
        "label": "Label shown when the search returned some result",
        "defaultValue": "Výsledek vyhledávání",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "noResultLabel",
        "label": "Label shown when the search returned no result",
        "defaultValue": "Nenalezeny žádné záznamy odpovídající zadaným kritériím, zkuste změnit kritéria vyhledávání.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "openCRMLabel",
        "label": "Label for CRM link",
        "defaultValue": "Otevřít detail klienta v CRM",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allAddressesButtonLabel",
        "label": "Label for 'showAllAddresses' button controlling visibility of addresses denepending on its address type",
        "defaultValue": "Všechny adresy",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allAlertsButtonLabel",
        "label": "Label for 'showAllAlerts' button controlling visibility of alerts denepending on its alert active flag",
        "defaultValue": "Všechna varování",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allEmailsButtonLabel",
        "label": "Label for 'showAllEmails' button controlling visibility of emails denepending on its contact type (PRIMARY / SECONDARY / NONE)",
        "defaultValue": "Všechny e-maily",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allPhonesButtonLabel",
        "label": "Label for 'showAllPhones' button controlling visibility of phones denepending on its phone type (PRIMARY / SECONDARY / NONE)",
        "defaultValue": "Všechny telefony",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allAgreementsButtonLabel",
        "label": "Label for 'showAllAgreements' button controlling visibility of agreements denepending on its phone type (PRIMARY / SECONDARY / NONE)",
        "defaultValue": "Všechny souhlasy",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addressTooltipDetailTitle",
        "label": "Detail title in address tooltip",
        "defaultValue": "Detail",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addressTooltipCitypartLabel",
        "label": "City part label in address detail tooltip",
        "defaultValue": "Část obce",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addressTooltipCountryLabel",
        "label": "Country label in address detail tooltip",
        "defaultValue": "Zěmě",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "supplementTooltipLabel",
        "label": "Supplement label in address detail tooltip",
        "defaultValue": "Dodatek",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "alertDetailTitle",
        "label": "Detail title in alert tooltip",
        "defaultValue": "Detail",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "agreementDetailTitle",
        "label": "Agreement detail title in agreement tooltip",
        "defaultValue": "Agreement",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "agreementTypeLabel",
        "label": "Agreement type of agreement in agreement tooltip",
        "defaultValue": "Tzpe",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "agreementDateLabel",
        "label": "Date of signature of agreement in agreement tooltip",
        "defaultValue": "Date",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "agreementToDateLabel",
        "label": "Date of agreement valid to in agreement tooltip",
        "defaultValue": "Date to",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "alertMessageLabel",
        "label": "Message label in alert tooltip",
        "defaultValue": "Zpráva",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "alertSinceDateLabel",
        "label": "Since date label in alert tooltip",
        "defaultValue": "Platné od",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "telephoneDetailTooltipTitle",
        "label": "Detail title of tooltip for Phone",
        "defaultValue": "Detail",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "telephoneTypeTooltipLabel",
        "label": "Label of telephone type row in tooltip",
        "defaultValue": "Typ telefonu",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "mailDetailTooltipTitle",
        "label": "Detail title of tooltip for Mail",
        "defaultValue": "Detail",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "mailTypeTooltipLabel",
        "label": "Label of mail type row in tooltip",
        "defaultValue": "Typ e-mailu",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "primaryContactLabel",
        "label": "Label of contact marked as primary",
        "defaultValue": "primární",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "secondaryContactLabel",
        "label": "Label of contact marked as primary",
        "defaultValue": "sekundární",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "phoneTypeLabel",
        "label": "Label of contact marked as primary",
        "defaultValue": "Telefon",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "mailTypeLabel",
        "label": "Label of contact marked as primary",
        "defaultValue": "E-mail",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "personalIdLabelMain",
        "label": "Label for Personal Id field in the field",
        "defaultValue": "Rodné číslo",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "cluidLabelMain",
        "label": "Label for the result table column CLUID in the field",
        "defaultValue": "CLUID",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addressLabelMain",
        "label": "Label for the result table column Address in the field",
        "defaultValue": "Adresa",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "idCardLabelMain",
        "label": "Label for the result table column IdCard in the field",
        "defaultValue": "Doklad",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "loadWithChannels",
        "label": "Flag for load person with channels.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showChannels",
        "label": "Flag for show/hide channels.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showSearchButton",
        "label": "Flag for show/hide search button.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showClearButton",
        "label": "Flag for show/hide clear button.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showRefreshButton",
        "label": "Flag for show/hide refresh button.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "html2pdf-field",
    "label": "The field is able to transform HTML template to PDF and store the result to DMS. The field also supports opening/downloading the document from DMS",
    "model": {
      "duid": {
        "type": "STRING",
        "label": "Output ESPIS identificator",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "htmlDef": {
        "type": "TEXT",
        "label": "The attribute contains HTML template to be loaded and used for PDF generataion",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/html2pdf/html2pdf.js",
    "application": null,
    "documentation": "SMART_UIF012+html2pdf-field",
    "properties": [
      {
        "name": "autoOpen",
        "label": "Indicates whether the newly created document has to be automatically open after its generation",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "recordType",
        "label": "RecordType of the new ",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "recordForm",
        "label": "EspisRecordForm is enum value ANALOG or DIGITAL",
        "defaultValue": "ANALOG",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "generateLabel",
        "label": "Label for the Generate button",
        "defaultValue": "Vygenerovat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "openLabel",
        "label": "Label for the Open button",
        "defaultValue": "Otevřít",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "hub-comments-field",
    "label": "The field for show comments from HUB.",
    "model": {
      "hubCidla": {
        "type": "STRING",
        "label": "The output is the list of the records",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/hubcomments/hubcommentsfield.js",
    "application": "hub",
    "documentation": "TODO",
    "properties": []
  },
  {
    "name": "inheritors-field",
    "label": "The field for add inheritors and their substitutes.",
    "model": {
      "inheritors": {
        "type": "LIST",
        "label": "The list with Inheritors. Each Inheritor has attributes type (person/manualPerson/company/other) and it can have attribute substitute = link to person, manualPerson or other. Inheritor person has attribute cluid. Inheritor manualPerson has attributes firstName, surname, personalId and birthDate. Inheritor company has only registrationId. Inheritor other has only attribute other:String.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "cluid": {
        "type": "STRING",
        "label": "CLUID of the first Inheritor in the list.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "mainInheritor": {
        "type": "MAP",
        "label": "Loaded entity for the Inheritor on the first position. In property 'type' is text: 'person', 'manualPerson', 'company', 'companyCluid' or 'other'. In property 'substitute' is loaded entity of substitute - it has the same structure as inheritor.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/inheritors/inheritorsfield.js",
    "application": "her",
    "documentation": "SMART_UIF037+inheritors-field",
    "properties": [
      {
        "name": "addInheritorLabel",
        "label": "Label for button that add new inheritor.",
        "defaultValue": "Přidat osobu",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "onlyOneInheritor",
        "label": "Boolean value if user can add only one inheritor or unlimitided number of them.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "inheritors-shares-edit-field",
    "label": "The field for set inheritors shares.",
    "model": {
      "divideType": {
        "type": "STRING",
        "label": "Divide types: share, percent, amount.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "products": {
        "type": "LIST",
        "label": "The list of products. Into each product is inserted an object with variables: divided, accountBalance and divideType (share/percent/amount).",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "inheritors": {
        "type": "LIST",
        "label": "The list of inheritors. Into each inheritor is inserted a map (key is product.productInstanceId) with objects. These info objects contains (fractionNumerator and fractionDenominator) or percent or amount.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "mainInheritor": {
        "type": "MAP",
        "label": "Input attribute with main inheritor.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/inheritorssharesedit/inheritorsSharesEditField.js",
    "application": "her",
    "documentation": "SMART_UIF038+inheritors-shares-edit-field",
    "properties": [
      {
        "name": "productsFilter",
        "label": "It is optional expression to filter products to display. Example: 'getItem(item, \"accountPrefix\")==\"013\"'",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "inheritorsFilter",
        "label": "It is optional expression to filter inheritors to display. Example: 'containsItem(getItem(item, \"roles\"), \"role1\")'",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showColumnAmount",
        "label": "Show the column with amount.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showManualDivisionButton",
        "label": "Show the 'manual division' button.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "manualDivisionAddButton",
        "label": "Label for the button to create fictitious product 'manual division'",
        "defaultValue": "Přidat prostředky k manuálnímu rozdělení",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "defaultBackendProductId",
        "label": "Default backendProductId in a product added for manual division.",
        "defaultValue": "MANUAL_DIVISION",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "defaultBackendProductIdValue",
        "label": "Default backendProductIdValue in a product added for manual division.",
        "defaultValue": "Prostředky k manuálnímu rozdělení",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "inheritors-shares-field",
    "label": "The field for view inheritors shares.",
    "model": {
      "divideType": {
        "type": "STRING",
        "label": "Divide types: share, percent, amount.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "products": {
        "type": "LIST",
        "label": "The list of products. In each product should be an object with variables: divided, accountBalance and divideType (share/percent/amount).",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "inheritors": {
        "type": "LIST",
        "label": "The list of inheritors. In each inheritor should be a map (key is product.productInstanceId) with objects. These info objects should contain (fractionNumerator and fractionDenominator) or percent or amount.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "mainInheritor": {
        "type": "MAP",
        "label": "Input attribute with main inheritor.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "hideGetSharesButton": {
        "type": "BOOLEAN",
        "label": "Input attribute for visibility of button for count shares.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "hideAddResidueButton": {
        "type": "BOOLEAN",
        "label": "Input attribute for visibility of button for add residue.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "incomePay": {
        "type": "STRING",
        "label": "Input attribute of chosen income pay type.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/inheritorsshares/inheritorsShares.js",
    "application": "her",
    "documentation": "SMART_UIF039+inheritors-shares-field",
    "properties": [
      {
        "name": "productsFilter",
        "label": "It is optional expression to filter products to display. Example: 'getItem(item, \"accountPrefix\")==\"013\"'",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "inheritorsFilter",
        "label": "It is optional expression to filter inheritors to display. Example: 'containsItem(getItem(item, \"roles\"), \"role1\")'",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowedCurrencies",
        "label": "List of allowed currencies. It the list is empty or null then all currencies will be allowed.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showOnlyMainInheritor",
        "label": "True if component should show only main inheritor, hide column 'Rozděleno' and hide button 'Vypočítej podíly'.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "validate",
        "label": "Turn off/on validations.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "loan-info-field",
    "label": "Component provides detail information about given loan. Loan could be set by accountNumber",
    "model": {
      "cluid": {
        "type": "STRING",
        "label": "Client identification",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "accountNumber": {
        "type": "STRING",
        "label": "Loan account number",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "prefix": {
        "type": "STRING",
        "label": "The account prefix (without account number and bank code). Example: 123",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "bankCode": {
        "type": "STRING",
        "label": "The bank code (without prefix and account number). Example: 0800",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "fullAccountNumber": {
        "type": "STRING",
        "label": "The account number as String. Example: 123-123456/0800",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "cgpId": {
        "type": "STRING",
        "label": "cgpId of the loan, output attribute",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "account": {
        "type": "MAP",
        "label": "The account instance with account, prefix and bankCode as properties",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.core.model.AccountDto"
      },
      "loanInfo": {
        "type": "MAP",
        "label": "The loan instance with detail loan information. Consists of 3 main sections: loan detail, related clients, loan services.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.mnt.esb.data.LoanDataResponseDto"
      },
      "loadingError": {
        "type": "BOOLEAN",
        "label": "True in case error occured",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "loadingSuccess": {
        "type": "BOOLEAN",
        "label": "True in case data were successfuly loaded",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/loaninfo/loaninfo.js",
    "application": "mnt",
    "documentation": "SMART+UIF070+loan-info-field",
    "properties": [
      {
        "name": "visibleItems",
        "label": "Defines what parts of infoField should be visible",
        "defaultValue": {
          "services": true,
          "relatedClients": true,
          "repaidAmount": false,
          "debt": false,
          "totalAmount": false,
          "principal": false,
          "loanStatus": false
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "loadPPI",
        "label": "If true, PPI data will be loaded",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "mail-field",
    "label": "The field displays email form.",
    "model": {
      "recipient": {
        "type": "STRING",
        "label": "Recient of the email",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "subject": {
        "type": "STRING",
        "label": "Subject of the email",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "body": {
        "type": "TEXT",
        "label": "Body of the email",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "from": {
        "type": "STRING",
        "label": "Sender of the email",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "saveToESPIS": {
        "type": "BOOLEAN",
        "label": "Duid of the newly created email in ESPIS",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "queueUsername": {
        "type": "STRING",
        "label": "If set, user name used to assign the task when email is received",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "caseRecords": {
        "type": "LIST",
        "label": "List of records that could be used as attachments for e-mail",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.RecordDto"
      },
      "selectedAttachments": {
        "type": "LIST",
        "label": "If case contains any ESPIS documents and user manually select at least one of them then this list containt theese documents",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.RecordDto"
      },
      "emailSentSuccessfully": {
        "type": "BOOLEAN",
        "label": "If email has been sent successfully",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/mail/mail.js",
    "application": null,
    "documentation": "SMART_UIF013+mail-field",
    "properties": [
      {
        "name": "sendLabel",
        "label": "Label for Send Button",
        "defaultValue": "Odeslat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "saveLabel",
        "label": "Label for Save Button",
        "defaultValue": "Uložit",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "recipientLabel",
        "label": "Label for Recipient input",
        "defaultValue": "Příjemce",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "subjectLabel",
        "label": "Label for Subject input",
        "defaultValue": "Předmět",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "saveToESPISLabel",
        "label": "Label for SaveToESPIS checkbox",
        "defaultValue": "Uložit do ESPIS",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "successCloseActivity",
        "label": "Closes activity when email was successfully sent. It can contain values: true, false or expression.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addAttachmentsLabel",
        "label": "Label for addAttachments button",
        "defaultValue": "Přidat přílohy",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectedRecordsLabel",
        "label": "Label for attached records",
        "defaultValue": "Vybrané přílohy",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "generateLabel",
        "label": "Label of the Generate button",
        "defaultValue": "Generovat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "template",
        "label": "Freemarkeer template",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectDocumentsPopupTitle",
        "label": "Title for add attachments pop up",
        "defaultValue": "Vybrat přílohy",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "noRecordFoundPopupLabel",
        "label": "Message for 'no record found' state of attachments pop up",
        "defaultValue": "Nebyly nalezeny žádné přílohy",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addSelectedDocumentsButtonPopupLabel",
        "label": "Label for add selected document button",
        "defaultValue": "Uložit a zavřít",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closePopupButtonLabel",
        "label": "Label for dismiss 'add attachments popup' without saving selected documents",
        "defaultValue": "Zavřít",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "attachmentsSelectionPopupTableHeader",
        "label": "Table header for attachments selection popup",
        "defaultValue": {
          "check": "Vybrat",
          "type": "Typ",
          "created": "Datum vytvoření"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectAllRecordsPopupLabel",
        "label": "Label for check-box 'select all documents' in add attachments popup",
        "defaultValue": "Vybrat všechny dokumenty",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibleAddAttachmentsButton",
        "label": "Describing visibility of mail-field add attachments button. If not set button is visible.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "generateSubjectExpression",
        "label": "It is optional expression to generate email's subject.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "mailRecordType",
        "label": "Type of communication default value is '4367' e-mail communication",
        "defaultValue": "4367",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "sendImmediately",
        "label": "If you can send email now or prepare for later",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibilitySaveToESPIS",
        "label": "If save to espis checkbox is visible",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "defaultValueSaveToESPIS",
        "label": "Paste default value for save to espis",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "defaultAttachmentExpression",
        "label": "Optional expression to select attachments automatically e.g.: \"item.recordType==900059\"",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "manual-csv-import-field",
    "label": "The field for importing csv file and its processing into LIST of objects. Calls the service with endpoint specified in property uri.",
    "model": {
      "csvList": {
        "type": "LIST",
        "label": "The collection of objects created from parsed csv file.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "invalidLines": {
        "type": "LIST",
        "label": "The collection of invalid lines after call service with csv file.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "error": {
        "type": "BOOLEAN",
        "label": "The attribute is set to true if the service call failed.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "warning": {
        "type": "BOOLEAN",
        "label": "The attribute is set to true if the job was finished with some errors.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "success": {
        "type": "BOOLEAN",
        "label": "The attribute is set to true if the service call completed successfully.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "selectedBranch": {
        "type": "STRING",
        "label": "Selected branch. Value is sent as param to job",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/manualcsvimportfield/manualcsvimportfield.js",
    "application": null,
    "documentation": "SMART_UIF???+csv-import-field",
    "properties": [
      {
        "name": "uploadUri",
        "label": "Service endpoint URL",
        "defaultValue": "/api/runtime/job/caseimport/manual",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "validateUri",
        "label": "Service endpoint URL",
        "defaultValue": "/api/runtime/job/caseimport/manual/validate",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "jobParams",
        "label": "Parameters of the job called with the parsed file",
        "defaultValue": {
          "jobType": "MOCK_CSV",
          "separator": ",",
          "withErrors": "false"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "isInTest",
        "label": "Show file input element for test",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeActivity",
        "label": "Closes the activity the field is in. It can contain values: true, false or expression.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "labels",
        "label": "Label for form",
        "defaultValue": {
          "caseType": "Typ požadavku",
          "notifications": "Notifikace po zpracování",
          "numberRows": "Počet řádků na úkol",
          "workingDays": "Požadovaný počet pracovních dní",
          "errorLabel": "CHYBA",
          "warningLabel": "DOKONČENO S CHYBAMI",
          "successLabel": "OK",
          "selectFileLabel": "Vyberte soubor...",
          "descriptionLabel": "Vyberte soubor csv nebo txt, který se pošle do služby",
          "saveCSV": "Nahrát",
          "resetCSV": "Smazat",
          "encoding": "Kódování souboru",
          "validLabel": "Validní CSV",
          "invalidLabel": "Invalidní CSV",
          "invalidTitle": "CSV není validní - seznam chyb",
          "downloadFile": "Stáhnout soubor s chybami"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "rowsPerCase",
        "label": "Specify number of rows for parsed, default value is 1",
        "defaultValue": 1,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibleMultilineItems",
        "label": "Specify number of rows for parsed, default value is 1",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "conditionalRoles",
        "label": "List of objects, each one contains condition and list of roles.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "mortgagor-field",
    "label": "Component enables to assign owners to ownership certificates and check the contact information.",
    "model": {
      "ownershipCertificateId": {
        "type": "STRING",
        "label": "Identification of ownership certificate",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "mortgagors": {
        "type": "LIST",
        "label": "Collection of mortgagors",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "allValid": {
        "type": "BOOLEAN",
        "label": "Shows if all mortgagors (all lines) in this specific component were validated.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/mortgagor/mortgagor.js",
    "application": "mnt",
    "documentation": "SMART+UIF080+mortgagor-field",
    "properties": []
  },
  {
    "name": "nq-document-choice-field",
    "label": "The field displays a list of documents to be selected for further processing.",
    "model": {
      "documents": {
        "type": "LIST",
        "label": "The output is the list of the selected documents.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.RecordDto"
      },
      "product": {
        "type": "MAP",
        "label": "Input product. It is optionally to filter the documents by the product not the case. If the parameter is set filter by current case is not applied. This attribute has to be set together with the cluid attribute.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "cluid": {
        "type": "STRING",
        "label": "Input cluid. It is optionally to filter the documents by the product not the case. If the parameter is set filter by current case is not applied. This attribute has to be set together with the product attribute.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "documentsInCreatedCases": {
        "type": "MAP",
        "label": "The output is the map of the new cases with documents duids.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.RecordDto"
      },
      "createdCidla": {
        "type": "STRING",
        "label": "Identifier of the newly created case with the selected documents.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/nqdocumentchoice/nqdocumentchoice.js",
    "application": "nq",
    "documentation": "SMART_UIF041+nqdocumentchoice-field",
    "properties": [
      {
        "name": "debugCidla",
        "label": "Cidla, use only for Debug purposes",
        "defaultValue": "SC0000000000000001",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "tableColumnNames",
        "label": "Header column names",
        "defaultValue": [
          "State",
          "DUID",
          "Type",
          "Created On",
          "Actions"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "actionNames",
        "label": "Action names",
        "defaultValue": [
          "Select",
          "Deselect"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "includeClosedInstances",
        "label": "Result list will include product closed instances if value of this variable will true",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "includeNotAliveInstances",
        "label": "Result list will include product not alive instances if value of this variable will true",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "nq-product-list-field",
    "label": "Component consumes list of clients unique identificators (cluids) and provides list of products related to those clients. For each product it is possible to edit its balances in the day of death (driven by balanceInput visibility flag) and check the button called 'solved' (driven by solveButton visibility flag). Every record in products list provide informations about all clients whose are related to product and theirs relations. There are product treatments and active employees for each product too.",
    "model": {
      "productList": {
        "type": "LIST",
        "label": "Output list filled by products of selected clients",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.nq.accounts.dto.NqAccountDTO"
      },
      "client1": {
        "type": "MAP",
        "label": "Identification of client 1.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.PersonDto"
      },
      "client2": {
        "type": "MAP",
        "label": "Identification of client 2.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.PersonDto"
      },
      "productCategory": {
        "type": "MAP",
        "label": "Output flags colection telling that in products collection there are at least one RISK / CARD / INESTMENT productType",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "errorOccurred": {
        "type": "BOOLEAN",
        "label": "Output flag tells that product search failed.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/nqproductlist/nqproductlist.js",
    "application": "nq",
    "documentation": "SMART_UIF040+nq-product-list-field",
    "properties": [
      {
        "name": "debugCluid",
        "label": "Cluid used for debug purposes only!!!",
        "defaultValue": "1997-04-09-17.06.50.369239",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibleItems",
        "label": "Show solve button for each product",
        "defaultValue": {
          "balanceInput": true
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "buttons",
        "label": "Buttons properties",
        "defaultValue": {
          "solveButton": {
            "visible": "true",
            "editable": "true",
            "label": "Solved"
          },
          "productToResponse": {
            "visible": "true",
            "editable": "true",
            "label": "To response"
          },
          "manualAddProduct": {
            "visible": "true",
            "editable": "true",
            "label": "Add product manually"
          },
          "selectButton": {
            "visible": "true",
            "editable": "true",
            "radioButton": "false",
            "label": "Select Product"
          }
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "labels",
        "label": "Labels properties",
        "defaultValue": {
          "accountBalanceLabel": "Account balance on death date",
          "accountBalanceActualLabel": "Actual account balance",
          "accountDisponibleBalanceLabel": "Account disponible balance",
          "treatmentCodesLabel": "Treatment codes",
          "employeesLabel": "Caring employees",
          "productStateLabel": "Product state",
          "sbProductStateLabel": "Product state in SB",
          "clientDetailsPopoverTitle": "Client detail",
          "clientDetailsPopoverClientLabel": "Client: ",
          "clientDetailsPopoverBirthNumberLabel": "Birth number: ",
          "clientDetailsPopoverRelationLabel": "Client - product relation: ",
          "productTypeLabel": "Product type"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "columns",
        "label": "Columns visibilities",
        "defaultValue": {
          "treatments": true,
          "employees": true,
          "productStates": true
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "solvingProductTypes",
        "label": "product types filter for this component. Possible values are ['OTHER_PRODUCT', 'RISK_PRODUCT', 'CARD_PRODUCT', 'INVESTMENT_PRODUCT']",
        "defaultValue": [
          "OTHER_PRODUCT"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "readOnlyProductTypes",
        "label": "product types filter for this component. Possible values are ['OTHER_PRODUCT', 'RISK_PRODUCT', 'CARD_PRODUCT', 'INVESTMENT_PRODUCT']",
        "defaultValue": [
          "OTHER_PRODUCT"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "productRelationTypes",
        "label": "relation types array filter controlling visibility of loaded products. Possible values are defined as array of keys in codebook CB_PartyProductInstanceRoleType (i.e. [\"42\",\"46\"]). If value is empty or null then all products will be displayed. Otherwise there will be just specified relation type products visible. Other products will be hidden (but still stored on model)",
        "defaultValue": [
          "42",
          "46"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeOnError",
        "label": "Closes the activity when error occurred.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "productsFilter",
        "label": "It is optional expression to filter products to display. Example: 'getItem(item, \"isManual\") == true)' or 'getItem(item, getItem(\"isManual\")) == true)' or 'getItem(getItem(item, \"backendProduct\"), \"backendProductProdAgendaCode\")==\"2H\"' or 'substring(getItem(getItem(item, \"backendProduct\"), \"backendProductProdAgendaCode\"),0,2)==\"2H\"'",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "saveOnlyFilteredProducts",
        "label": "If it is true, then it saves to productList only filtered products.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "toggleGroupFieldCategories",
        "label": "keys used for toggle group field pairing",
        "defaultValue": {
          "investments": "ip",
          "cards": "kp",
          "risk": "vr"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "includeClosedInstances",
        "label": "Result list will include product closed instances if value of this variable will true",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "useMasterProducts",
        "label": "Optional flag indicating that products with master product will be included into response.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "relationshipType",
        "label": "additional information about products (productId) possible value: 'JPP', defaultValue is null",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "defaultBackendProductId",
        "label": "Default backendProductId in a product added manually.",
        "defaultValue": "MANUAL",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "defaultBackendProductIdValue",
        "label": "Default backendProductIdValue in a product added manually.",
        "defaultValue": "Neznámý produkt",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "defaultProductType",
        "label": "Default productType in a product added manually.",
        "defaultValue": "OTHER_PRODUCT",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showProductTypesCombo",
        "label": "Shows an product types combo-box",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "productTypes",
        "label": "List of possible product types with it's labels.",
        "defaultValue": [
          {
            "id": "OTHER_PRODUCT",
            "label": "Other product"
          },
          {
            "id": "RISK_PRODUCT",
            "label": "Risk product"
          },
          {
            "id": "CARD_PRODUCT",
            "label": "Card product"
          },
          {
            "id": "INVESTMENT_PRODUCT",
            "label": "Investment product"
          }
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showSearchButton",
        "label": "Show Search button.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "orders-field",
    "label": "The field for list of orders.",
    "model": {
      "orders": {
        "type": "LIST",
        "label": "The list of orders. In each order should be an object with variables: TBD.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/orders/ordersfield.js",
    "application": "mnt",
    "documentation": "",
    "properties": []
  },
  {
    "name": "orgunit-field",
    "label": "Purpose of this component is to find and select organisation unit (branch) or employee (worker).",
    "model": {
      "orgunit": {
        "type": "MAP",
        "label": "OrgUnit detail",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "employee": {
        "type": "MAP",
        "label": "Employee detail",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/orgunit/orgunit.js",
    "application": "mnt",
    "documentation": "SMART+UIF070+orgunit-field",
    "properties": [
      {
        "name": "enableEmployeeSearch",
        "label": "Enable employee search",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "orgunitSearchLabel",
        "label": "Label for orgunit combobox",
        "defaultValue": "Vyberte pobočku",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "employeeSearchLabel",
        "label": "Label for employee combobox",
        "defaultValue": "Vyberte zaměstnance",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "person-field",
    "label": "The field displays summary information about the client (person). The field also supports searching the client in CRM",
    "model": {
      "cluid": {
        "type": "STRING",
        "label": "The cluid of the client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "firstName": {
        "type": "STRING",
        "label": "The first name of the client, used to search client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "lastName": {
        "type": "STRING",
        "label": "The last name of the client, used to search client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "personalId": {
        "type": "STRING",
        "label": "The personal Id of the client, used to search client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "client": {
        "type": "MAP",
        "label": "The client instance. This model value overrides the value stored in cluid",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.PersonDto"
      }
    },
    "location": "comp/field/person/person.js",
    "application": null,
    "documentation": "SMART_UIF014+person-field",
    "properties": [
      {
        "name": "visibleItems",
        "label": "Optional flags (cluid, image, nameSurname, address, personalId, cardType, degree, additionalDegree) describing visibilities of person-field attributes (cluid, image, nameSurname, address, personalId, cardType, degree, additionalDegree). If not set all attributes are visible.",
        "defaultValue": {
          "cluid": true,
          "image": false,
          "nameSurname": true,
          "address": true,
          "personalId": true,
          "link": true,
          "cardType": true,
          "degree": true,
          "additionalDegree": true
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "searchLabel",
        "label": "Label for Search Button",
        "defaultValue": "Vyhledat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "clearLabel",
        "label": "Label for Clear Button",
        "defaultValue": "Nové zadání",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "noResultMessage",
        "label": "Message when the client is not found",
        "defaultValue": "Osoba není vybrána",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "modalTitleLabel",
        "label": "The Title of the modal window",
        "defaultValue": "Vyhledat osobu...",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "firstNameLabel",
        "label": "Label for First Name field in the modal window",
        "defaultValue": "Jméno",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "lastNameLabel",
        "label": "Label for Last Name field in the modal window",
        "defaultValue": "Příjmení",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "birthDateLabel",
        "label": "Label for Birth Date field in the modal window",
        "defaultValue": "Datum narození",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "personalIdLabelMain",
        "label": "Label for Personal Id field in the field",
        "defaultValue": "RČ",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "personalIdLabel",
        "label": "Label for Personal Id field in the modal window",
        "defaultValue": "RČ",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "fullNameLabel",
        "label": "Label for the result table column Name in the modal window",
        "defaultValue": "Jméno",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "cluidLabelMain",
        "label": "Label for the result table column CLUID in the field",
        "defaultValue": "CLUID",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "cluidLabel",
        "label": "Label for the result table column CLUID in the modal window",
        "defaultValue": "CLUID",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "actionsLabel",
        "label": "Label for the result table column Actions in the modal window",
        "defaultValue": "Akce",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectLabel",
        "label": "Label for the Select button in the result table in the modal window",
        "defaultValue": "Vybrat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "cancelLabel",
        "label": "Label for Cancel button in the modal window",
        "defaultValue": "Storno",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "msgSystemNotAvailableLabel",
        "label": "Message displayed when the system is not available and does not return any result",
        "defaultValue": "Backend systém není dostupný, data bude nutno zadat ručně",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "resultLabel",
        "label": "Label shown when the search returned some result",
        "defaultValue": "Výsledky",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "noResultLabel",
        "label": "Label shown when the search returned no result",
        "defaultValue": "Žádný výsledek",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "openCRMLabel",
        "label": "Label for CRM link",
        "defaultValue": "Otevřít v CRM",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "loadWithChannels",
        "label": "Flag for load person with channels.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showChannels",
        "label": "Flag for show/hide channels.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "personident-field",
    "label": "The field contains 3 input boxes. The first for first name, the second for last name and third is either for personalId or for birthDate. The field can be used with person field which supports the same logic of the attributes as input.",
    "model": {
      "firstName": {
        "type": "STRING",
        "label": "First Name",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "lastName": {
        "type": "STRING",
        "label": "The last name",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "personalId": {
        "type": "STRING",
        "label": "The personalId/birthDate",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/personident/personident.js",
    "application": null,
    "documentation": "SMART_UIF015+personident-field",
    "properties": [
      {
        "name": "firstNameLabel",
        "label": "Label for First Name field",
        "defaultValue": "Jméno",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "lastNameLabel",
        "label": "Label for Last Name field",
        "defaultValue": "Příjmení",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "personalIdLabel",
        "label": "Label for Personal ID / Date of Birth (format dd.mm.yyyy) field",
        "defaultValue": "RČ nebo datum narození (formát dd.mm.yyyy)",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "ponk-doclist-field",
    "label": "The field displays set of the records(ClientActivity) associated with the case.",
    "model": {
      "records": {
        "type": "LIST",
        "label": "The list of the records",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "rejectedClientActivities": {
        "type": "LIST",
        "label": "The list of reject client activities",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.ponk.runtime.model.ClientActivity"
      },
      "cluid": {
        "type": "STRING",
        "label": "cluid of the client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "client": {
        "type": "MAP",
        "label": "client",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.her.client.dto.ClientDTO"
      },
      "clientTaskReference": {
        "type": "MAP",
        "label": "The data from client task",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.ponk.runtime.model.ClientTask"
      },
      "clientTaskId": {
        "type": "STRING",
        "label": "ID ponk client task",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "errorOccurred": {
        "type": "BOOLEAN",
        "label": "Flag tells that records load, insert or upload failed.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/ponkdoclistfield/ponkdoclistfield.js",
    "application": "ponk",
    "documentation": "",
    "properties": [
      {
        "name": "debugCidla",
        "label": "Cidla, use only for Debug purposes",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "tableColumnNames",
        "label": "Header column names. If you leave out any property then related column will not be displayed.",
        "defaultValue": {
          "name": "Jméno",
          "label": "Název",
          "client": "Klient",
          "cluid": "CLUID",
          "duid": "DUID",
          "recordType": "Dokument",
          "type": "Požadavek",
          "status": "Stav",
          "actions": "Akce"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "labels",
        "label": "Labels for component",
        "defaultValue": {
          "showFileAction": "Zobrazit",
          "cancelAction": "Zrušit",
          "uploadAction": "Nahrát",
          "approvedAction": "Schválit",
          "modalTitleLabel": "Nahrát dokument",
          "documentToUploadLabel": "Název dokumentu",
          "uploadFileLabel": "Název dokumentu",
          "addLabel": "Nahrát",
          "cancelLabel": "Zrušit",
          "actionsLabel": "Možnosti",
          "documentLabel": "Název dokumentu",
          "caseType": "Proces",
          "relinkButton": "Přepojit",
          "relinkLabel": "Přepojit dokument",
          "newWindowAction": "Otevřít v novém okně",
          "openAllInNewWindow": "Otevřít vše v novém okně",
          "refreshLabel": "Aktualizovat",
          "rejectAction": "Zamítnout",
          "downloadAction": "stáhnout dokument",
          "markAsOkUploadedFilesAction": "Potvrdit nahrané soubory"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showPreview",
        "label": "Show window (iframe) with selected document.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "firstPreview",
        "label": "Filter that should choose one document that will be displayed as first. Example: getItem(item, \"duid\") == \"CS00000000000003\"",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeOnError",
        "label": "Closes the activity when error occurred.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "refreshDataOnInit",
        "label": "Refresh/loads table data on field init.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "statusLabels",
        "label": "Translation of the statuses.",
        "defaultValue": {
          "OPEN": "Vytvořený",
          "UPLOADED": "Nahraný",
          "VIEWED": "Zobrazený",
          "SIGNED": "Podepsaný",
          "TERMINATED": "Ukončený",
          "DELETED": "Smazaný",
          "COMPLETED": "Dokončený",
          "RECEIVED": "Přijatý",
          "APPROVED": "Schválený"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "typeLabels",
        "label": "Translation of the type.",
        "defaultValue": {
          "VIEW": "Přečíst",
          "SIGN": "Podepsat",
          "UPLOAD": "Nahrát",
          "DELIVER": "Doručit",
          "RECEIVE": "Přijmout"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "openInNewWindow",
        "label": "Open in new window.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "fullTextSearch",
        "label": "If you show full text search above component",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowEditPonk",
        "label": "If you allow edit ponk tasks",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "documentRepository",
        "label": "Document Repository, see document CB_DocumentRepository",
        "defaultValue": "esignature",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowFileTypes",
        "label": "allow file types upload to DMS service, separete by comma (,)",
        "defaultValue": "application/pdf",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "ponk-overview-field",
    "label": "The field displays overview of client task",
    "model": {
      "clientTaskReference": {
        "type": "MAP",
        "label": "The data from client task",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.ponk.runtime.model.ClientTask"
      },
      "clientTaskId": {
        "type": "STRING",
        "label": "ID ponk client task",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/ponkoverviewfield/ponkoverviewfield.js",
    "application": "ponk",
    "documentation": "",
    "properties": [
      {
        "name": "allowedActions",
        "label": null,
        "defaultValue": {
          "storno": true
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "labels",
        "label": "Labels for overview",
        "defaultValue": {
          "cidla": "Cidla",
          "cluid": "CLUID",
          "state": "Stav",
          "created": "Vytvořeno",
          "createdBy": "Vytvořil",
          "completedAt": "Dokončeno",
          "expirationDate": "Datum expirace",
          "setExpDateButton": "Nastavit datum expirace",
          "stornoButton": "Storno klientského úkolu"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "ponk-setup-field",
    "label": "The field is designed to allow to the designer and the user to configure the client task.",
    "model": {
      "documentsMap": {
        "type": "MAP",
        "label": "Input map of documents.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "records": {
        "type": "LIST",
        "label": "Input list of records.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.RecordDto"
      },
      "clientActivities": {
        "type": "LIST",
        "label": "Output list of documents.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "documentsForSign": {
        "type": "LIST",
        "label": "Output list of DUIDs - documents to sign.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "client": {
        "type": "MAP",
        "label": "Input client. It needs client object to find out channels availability.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.her.client.dto.ClientDTO"
      },
      "allSet": {
        "type": "BOOLEAN",
        "label": "Output value if all clients activities are in valid state.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/ponksetupfield/ponksetupfield.js",
    "application": "ponk",
    "documentation": "",
    "properties": [
      {
        "name": "watchedAttributes",
        "label": "Collection of watched attributes",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "documentsDefinition",
        "label": "List of documents definitions.",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowedRecordTypes",
        "label": "List of allowed record types.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowAddPhysical",
        "label": "List of allowed record types.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowAddElectronic",
        "label": "List of allowed record types.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowAddExisting",
        "label": "List of allowed record types.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addRecordLabels",
        "label": "List of labels for dialog window add record",
        "defaultValue": {
          "title": "Přidat dokument",
          "type": "Typ dokumentu",
          "electronic": "Elektronický",
          "physical": "Fyzický",
          "exists": "Existující",
          "recordType": "Vyberte typ dokumentu",
          "upload": "Dokument k nahrání",
          "addButton": "Přidat",
          "cancel": "Zrušit",
          "duid": "DUID",
          "allowed": "Povolený",
          "all": "Vše"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addRecordsVisibleItems",
        "label": "The flag contains the visibility of the record types combo-boxes in add record popup.",
        "defaultValue": {
          "all": false,
          "allowed": true
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showAddRecordsPopup",
        "label": "Automatically show 'addRecordPopup' to upload file after a new activity is added.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showPreview",
        "label": "The way how to display the PDF document. Possible values are INTERNAL (displays document inline into the page), NEW_WINDOW (displays selected document in new window), NONE (will not display document)",
        "defaultValue": "INTERNAL",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showAddButton",
        "label": "Show or hide button for add new definition.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addButtonLabel",
        "label": "Label for button to add new definition.",
        "defaultValue": "Přidat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showOpenInNewTab",
        "label": "Show or hide button for open all documents in new windows/tabs.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "openAllNewTabLabel",
        "label": null,
        "defaultValue": "Otevřít vše v novém okně",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showResetButton",
        "label": "Show or hide button for reset.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowedNewActivityTypes",
        "label": null,
        "defaultValue": {
          "UPLOAD": true,
          "DELIVER": true,
          "VIEW": true,
          "SIGN": true,
          "RECEIVE": true
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "warningForMissingDocuments",
        "label": null,
        "defaultValue": "Některé povinné klientské aktivity nemají přiřazený dokument.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "warningForUnallowedType",
        "label": null,
        "defaultValue": "Některé klientské aktivity mají zvolený nepovolený typ požadavku.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowedFileTypes",
        "label": "Allow upload documents of given types. You should define both extension and mime type. Example for PDF documents: [\".pdf\", \"application/pdf\"]",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowedRecordFormRestriction",
        "label": "Allow add DUIDs having recordForm only. ANALOG/DIGITAL",
        "defaultValue": "DIGITAL",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "defaultActivityType",
        "label": "Předdefinovaný typ požadavku (UPLOAD, DELIVER, VIEW, SIGN, RECEIVE)",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "uploadAndRegisterInOneStep",
        "label": "Nahrání a registrace proběhne v jednom kroku po kliknutí na tlačítko \"Přidat\" v dialogu pro nahrání.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "print-field",
    "label": "Component for generating documents.",
    "model": {
      "documentsMap": {
        "type": "MAP",
        "label": "Input/output map with IDs as keys and RecordDTO as value for documents.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "persistedDocumentDefinitions": {
        "type": "MAP",
        "label": "Optional input/output map with IDs as keys and documentDefinition as value for documents. Used to save custom pare values for documents.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "account": {
        "type": "MAP",
        "label": "The account instance with account, prefix and bankCode as properties",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "allSigned": {
        "type": "BOOLEAN",
        "label": "If all documents which has to be sign is signed",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "ecrsDocuments": {
        "type": "LIST",
        "label": "Input list of documentId.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/printlist/printlist.js",
    "application": null,
    "documentation": "SMART_UIF044+print-field",
    "properties": [
      {
        "name": "showPreview",
        "label": "The way how to display the PDF document. Possible values are INTERNAL (displays document inline into the page), NEW_WINDOW (displays selected document in new window), NONE (will not display document)",
        "defaultValue": "INTERNAL",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "documentNameLabel",
        "label": "Label for column with document names.",
        "defaultValue": "Dokument",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "actionsLabel",
        "label": "Label for column with actions for a document",
        "defaultValue": "Akce",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "generateAgainLabel",
        "label": "Label for generate again button",
        "defaultValue": "Přegenerovat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showLabel",
        "label": "Label for show button.",
        "defaultValue": "Zobrazit",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addLabel",
        "label": "Label for add document button",
        "defaultValue": "Přidat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "createdLabel",
        "label": "Label for column with the date of creation or state of generation",
        "defaultValue": "Vytvořeno",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectLabel",
        "label": "Label for column with the checkbox.",
        "defaultValue": "Vybrat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "documentDefinitions",
        "label": "Definitions for documents.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "watchedAttributes",
        "label": "Collection of watched attributes",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "openInNewWindowLabel",
        "label": "Label for open in new window button",
        "defaultValue": "Otevřít v novém okně",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "documentInfoListNotCompleteLabel",
        "label": "Label for alert message",
        "defaultValue": "je nutné vygenerovat všechny dokumenty!",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "signLabel",
        "label": "Label for sign document",
        "defaultValue": "Podepsat dokument",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "pareLabel",
        "label": "Label for pare number",
        "defaultValue": "Počet kopií",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showPare",
        "label": "visibility of pare (ENABLE,DISABLED,NONE)",
        "defaultValue": "ENABLE",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "documentNotSignedLabel",
        "label": "Label for sign validation",
        "defaultValue": "Některé dokumenty nejsou podepsány.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addRecordLabels",
        "label": "List of labels for dialog window add record",
        "defaultValue": {
          "title": "Přidat dokument",
          "type": "Typ dokumentu",
          "electronic": "Elektronický",
          "physical": "Fyzický",
          "recordType": "Vyberte typ dokumentu",
          "upload": "Dokument k nahrání",
          "addButton": "Přidat",
          "cancel": "Zrušit",
          "duid": "DUID",
          "allowed": "Povolený",
          "all": "Vše"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "firstTimeGenerationSave",
        "label": "Flag which enables printing component to save case before first time documents generating occure.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "finalizedOldDocumentVersionTooltip",
        "label": "Tooltip with warning that generated document is older than input document.",
        "defaultValue": "Je finalizována starší verze dokumentu.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showPrintSelectedButton",
        "label": "Show/hide a button for print selected documents.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "printSelectedLabel",
        "label": "Label for a button for print selected documents.",
        "defaultValue": "Tisknout vybrané",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showGenerateSelectedAgain",
        "label": "Show/hide a button for generate selected documents again.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "generateSelectedAgainLabel",
        "label": "Label for a button for generate selected documents again.",
        "defaultValue": "Přegenerovat vybrané dokumenty",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "generatedPdfFilename",
        "label": "Expression for a filename of generated pdf from selected documents. It has to be without file extension ('.pdf').",
        "defaultValue": "\"documents\"",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "generatedPdfDoubleSided",
        "label": "Set 'double sided' for generated document from selected documents.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "product-field",
    "label": "The field displays the single product. The field supports searching product in RTODS.",
    "model": {
      "cluid": {
        "type": "STRING",
        "label": "The cluid of the client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "cgpId": {
        "type": "STRING",
        "label": "output product identifier",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "account": {
        "type": "MAP",
        "label": "Account as Object - input and output identification of product.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.core.model.AccountDto"
      },
      "product": {
        "type": "MAP",
        "label": "Output product as Object.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.ProductDto"
      },
      "fullAccountNumber": {
        "type": "STRING",
        "label": "Account as string (123-123456/0800) - input identification of product.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "client": {
        "type": "MAP",
        "label": "The client instance, containing cluid as an property",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.PersonDto"
      },
      "errorOccurred": {
        "type": "BOOLEAN",
        "label": "Flag tells that product get failed.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "selectedButton": {
        "type": "STRING",
        "label": "Output attribute - it stores key of the button only if bigButtons is true. Value are 'selectClosed', 'select' and 'clear'.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/product/product.js",
    "application": null,
    "documentation": "SMART_UIF016+product-field",
    "properties": [
      {
        "name": "visibleItems",
        "label": "Optional flags describing visibilities of product-field attributes. If not set all attributes are visible. Hierarchy is automatically turn off if property 'filterFunction' is set.",
        "defaultValue": {
          "image": true,
          "imagePopup": true,
          "roleType": true,
          "hierarchy": false
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectLabel",
        "label": "Label for the Search button",
        "defaultValue": "Vyhledat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectClosedLabel",
        "label": "Label for the Search closed products button",
        "defaultValue": "Vyhledat zrušené",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "cancelLabel",
        "label": "Label for Clean button",
        "defaultValue": "Nové zadání",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectLabelModal",
        "label": "Label for the Select button in the result table in the modal window",
        "defaultValue": "Vybrat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "cancelLabelModal",
        "label": "Label for Cancel button in the modal window",
        "defaultValue": "Storno",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "modalTitleLabel",
        "label": "The Title of the modal window",
        "defaultValue": "Produkty klienta",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "typeLabel",
        "label": "Label for the result table column Type in the modal window",
        "defaultValue": "Typ",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "evidenceNumberLabel",
        "label": "Label for the result table column Evidence Number in the modal window",
        "defaultValue": "Evidenční číslo",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "productTypeLabel",
        "label": "Label for the result table column Product Type in the modal window",
        "defaultValue": "Typ produktu",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "actionsLabel",
        "label": "Label for the result table column Actions in the modal window",
        "defaultValue": "Akce",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "loadingProductsLabel",
        "label": "Message displayed when the system is loading products",
        "defaultValue": "Načítání produktů...",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "msgSystemNotAvailableLabel",
        "label": "Message displayed when the system is not available and does not return any result",
        "defaultValue": "Backend systém není dostupný, data bude nutno zadat ručně",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeOnError",
        "label": "Closes the activity when error occurred.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "filterFunction",
        "label": "It is optional expression to filter values to display. This setting turn off hierarchy. Example: 'getItem(item, \"accountNumber\") == \"0552329189\"'",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "includeClosedInstances",
        "label": "Result list will include product closed instances if value of this variable will true",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "filterByCaseAttributes",
        "label": "Result list will include products filtered based on Case attributes",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "includeNotAliveInstances",
        "label": "Result list will include product not alive instances if value of this variable will true",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": "The property is no longer used, due refactoring of CGP Service to version v02_05",
        "required": null
      },
      {
        "name": "showBalance",
        "label": "Show current balance of the product",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "notFoundLabel",
        "label": "If no one products found, show this message",
        "defaultValue": "Nebyl nalezen žádný produkt.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "bigButtons",
        "label": "shows big buttons on top of component.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showSelectClosedButton",
        "label": "Shows button for finding and selecting closed products.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectedButtonRequired",
        "label": "Flag if product-field should be validated based on missing/filled value in an attribute selectedButton. It can work only if the attribute selectedButton is set.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "product-info-field",
    "label": "The field contains informations about product, enables changes regarding signing date and disbursement date and shows link to loan contract.",
    "model": {
      "cidla": {
        "type": "STRING",
        "label": "Cidla for case with product",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "ignoreUrgency": {
        "type": "BOOLEAN",
        "label": "If ignore urgency",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/productinfofield/productinfofield.js",
    "application": "cedr",
    "documentation": "",
    "properties": [
      {
        "name": "labels",
        "label": "Labels for field and popup",
        "defaultValue": {
          "mortgageAgreement": "Úvěrová smlouva",
          "dateOfSign": "Datum podpisu úvěrové smlouvy",
          "dateOfEnd": "Datum konce čerpání",
          "firstDisbursement": "Datum prvního čerpání",
          "lastDisbursement": "Datum posledního čerpání",
          "addButton": "Přidat",
          "cancel": "Cancel",
          "addDuidTitle": "Zadat úvěrovou smlouvu"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibleSignDate",
        "label": "If field is visible",
        "defaultValue": "false",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibleDisbursementUntilDate",
        "label": "If field is visible",
        "defaultValue": "false",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibleFirstDisbursementDate",
        "label": "If field is visible",
        "defaultValue": "false",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibleLastDisbursementDate",
        "label": "If field is visible",
        "defaultValue": "false",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibleUrgency",
        "label": "If field is visible",
        "defaultValue": "false",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "product-manual-field",
    "label": "The field for enter single product manually.",
    "model": {
      "productManual": {
        "type": "MAP",
        "label": "The object with Product - based on ProductDTO.java",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.ProductDto"
      }
    },
    "location": "comp/field/productmanual/productmanual.js",
    "application": null,
    "documentation": "SMART_UIF030+product-manual-field",
    "properties": [
      {
        "name": "labels",
        "label": "Labels for all buttons and product info items. Labels are: edit, clear, cancel, save, product, productType, cgpId, backendProductId, cardNumber, evidenceNumber, investmentNumber, account",
        "defaultValue": {
          "edit": "Upravit",
          "clear": "Nové zadání",
          "cancel": "Storno",
          "save": "Uložit",
          "product": "Produkt",
          "productType": "Typ produktu",
          "cgpId": "CGP ID",
          "backendProductId": "Kód produktu",
          "cardNumber": "Číslo karty",
          "evidenceNumber": "Evidenční číslo",
          "investmentNumber": "Evidenční číslo investice",
          "account": "Účet"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "productlist-field",
    "label": "The field displays the table with the products. ",
    "model": {
      "cgpIds": {
        "type": "LIST",
        "label": "The collection of the CGP identifiers of products. The contains selected products only. The attribute may be not set if you do just want to load the products.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "products": {
        "type": "LIST",
        "label": "The collection of the products. The attribute may be not set if you do just want to load the products.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.ProductDto"
      },
      "selectedProducts": {
        "type": "LIST",
        "label": "The collection of selected products.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.ProductDto"
      },
      "cluid": {
        "type": "STRING",
        "label": "cluid of the client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "client": {
        "type": "MAP",
        "label": "The client. The cluid is primary take from this attribute.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.PersonDto"
      }
    },
    "location": "comp/field/productlist/productlist.js",
    "application": null,
    "documentation": "SMART_UIF017+productlist-field",
    "properties": [
      {
        "name": "labels",
        "label": "Labels for all buttons and table headers. Labels are: select, selectAll, unselectAll, getProducts, type, product, evidenceNumber",
        "defaultValue": {
          "select": "Vybrat",
          "selectAll": "Vybrat vše",
          "unselectAll": "Zrušit výběr",
          "getProducts": "Načíst produkty",
          "type": "Typ",
          "product": "Produkt",
          "evidenceNumber": "Evidenční číslo"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "columns",
        "label": "List Columns in the table. Possible values are: image, product, evidenceNumber, select",
        "defaultValue": {
          "image": false,
          "product": true,
          "evidenceNumber": true,
          "select": true
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "filterFunction",
        "label": "It is optional expression to filter values to display. Example: 'getItem(item, \"accountNumber\") == \"0552329189\"'",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "includeClosedInstances",
        "label": "Result list will include product closed instances if value of this variable will true",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "includeNotAliveInstances",
        "label": "Result list will include product not alive instances if value of this variable will true",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibleOnlySelect",
        "label": "Uneditable list show only chosen products",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "autoreload",
        "label": "Automatically reload products",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showBalance",
        "label": "Show current balance of the product",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "queue-field",
    "label": "Component ",
    "model": {
      "potentialOwner": {
        "type": "STRING",
        "label": "Potential owner.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "businessAdministrator": {
        "type": "STRING",
        "label": "Output string - Business Administrator based on selected potential owner.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/queue/queue.js",
    "application": "uno2",
    "documentation": "",
    "properties": [
      {
        "name": "allowedPotentialOwners",
        "label": "List of allowed potential owners. Owner is allowed even if his business administrator is not in property 'allowedBusinessAdministrators'.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowedBusinessAdministrators",
        "label": "List of allowed business administrators. All owners with administrator in this list are allowed.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "placeholderText",
        "label": "Placeholder for the input text.",
        "defaultValue": "Zadejte roli/frontu",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "recordlist-field",
    "label": "The field displays set of the records associated with the case. The field allows to add or delete the record from ESPIS",
    "model": {
      "records": {
        "type": "LIST",
        "label": "The output is the list of the records",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.RecordDto"
      },
      "errorOccurred": {
        "type": "BOOLEAN",
        "label": "Flag tells that records load, insert or upload failed.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "product": {
        "type": "MAP",
        "label": "Input product. It is optionally to filter the documents by the product not the case. If the parameter is set filter by current case is not applied. This attribute has to be set together with the cluid attribute.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.ProductDto"
      },
      "cidlaList": {
        "type": "LIST",
        "label": "Input list of cidla.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "cluid": {
        "type": "STRING",
        "label": "Input client. It is optionally to filter the documents by the cluid of client not the case. If the parameter is set filter by current case is not applied. This attribute has to be set together with the cluid attribute.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "publishSucceeded": {
        "type": "BOOLEAN",
        "label": "Flag tells that publish succeeded.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "changeFormSucceeded": {
        "type": "BOOLEAN",
        "label": "Flag tells that change form succeeded.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/recordlist/recordlist.js",
    "application": null,
    "documentation": "SMART_UIF018+recordlist-field",
    "properties": [
      {
        "name": "debugCidla",
        "label": "Cidla, use only for Debug purposes",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "checkPhysical",
        "label": "if true, the field checks whether all related records associated with the case are not in physical state. In other words the field is not valid if the there is atleast one record in physical state",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "tableColumnNames",
        "label": "Header column names. If you leave out any property then related column will not be displayed. The fileName/publicationState/recordForm is allowed only with fast=true.",
        "defaultValue": {
          "state": "Stav",
          "duid": "DUID",
          "type": "Typ",
          "created": "Vytvořeno",
          "actions": "Akce"
        },
        "exampleValue": {
          "state": "Stav",
          "duid": "DUID",
          "type": "Typ",
          "created": "Vytvořeno",
          "actions": "Akce",
          "fileName": "Jméno souboru",
          "publicationState": "publicationState",
          "recordForm": "recordForm"
        },
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "actionLabels",
        "label": "Labels for action button and its options.",
        "defaultValue": {
          "optionsLabel": "Volby",
          "downloadLabel": "Stáhnout",
          "deleteLabel": "Smazat",
          "moveLabel": "Zneplatnění",
          "unmoveLabel": "Vratit zneplatnění",
          "publishLabel": "Publikovat",
          "publishPopupSuccess": "Publikace byla úšpěšně provedena.",
          "changeFormLabel": "Změnit formu na digitální",
          "changeFormPopupTitle": "Změna formy na digitální",
          "changeFormPopupQuestion": "Opravdu chcete změnit formu na digitální?",
          "changeFormPopupSuccess": "Změna formy na digitální byla úšpěšně provedena.",
          "changeFormPopupError": "Změna formy nelze provést"
        },
        "exampleValue": null,
        "mergeDefault": true,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showLabelInTableHeader",
        "label": "The flag controls the position of field label: in table header (true) or in a label in front of table (false).",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowedActions",
        "label": "The flags contain the visibility of actions for records.",
        "defaultValue": {
          "download": true,
          "delete": true,
          "add": true,
          "refresh": true,
          "move": false,
          "unmove": false,
          "publish": false,
          "changeForm": false
        },
        "exampleValue": null,
        "mergeDefault": true,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "checkPhysicalMessage",
        "label": "Header column names",
        "defaultValue": "Jeden nebo více DUIDů nejsou naskenovány.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowedRecordTypes",
        "label": "Allowed record types. This property should contain LIST of the documentTypes. Each document type is defined as string value. ",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "conditionalAllowedRecordTypes",
        "label": "List of objects, each one contains condition and list of allowed record types. Allowed record types are added to allowedRecordTypes when the condition is true. The property types should contain LIST of the recordTypes. Each record type is defined as string value. ",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibleItems",
        "label": "The flag contains the visibility of the record types combo-boxes in add record popup.",
        "defaultValue": {
          "all": false,
          "allowed": true
        },
        "exampleValue": null,
        "mergeDefault": true,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addLabel",
        "label": "Label for the Add... button",
        "defaultValue": "Přidat...",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "refreshLabel",
        "label": "Label for the Refresh button",
        "defaultValue": "Aktualizovat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showPreview",
        "label": "Show window (iframe) with selected document.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "firstPreview",
        "label": "Filter that should choose one document that will be displayed as first. Example: getItem(item, \"duid\") == \"CS00000000000003\"",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeOnError",
        "label": "Closes the activity when error occurred.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addRecordLabels",
        "label": "List of labels for dialog window add record",
        "defaultValue": {
          "title": "Přidat dokument",
          "type": "Typ dokumentu",
          "electronic": "Elektronický",
          "physical": "Fyzický",
          "exists": "Existující",
          "recordType": "Vyberte typ dokumentu",
          "upload": "Dokument k nahrání",
          "addButton": "Přidat",
          "cancel": "Zrušit",
          "duid": "DUID",
          "allowed": "Povolený",
          "all": "Vše"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowedPhysical",
        "label": "Allow add physical document.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowedElectronic",
        "label": "Allow add electronic document.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowedExisting",
        "label": "Allow add existing document.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "preferredFormForAdd",
        "label": "Preferred form of document in add record dialog. Can be P (PHYSICAL) or E (ELECTRONIC) or X (EXISTING)",
        "defaultValue": "E",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "recordTypeFilters",
        "label": "Filter records by its type",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "refreshDataOnInit",
        "label": "Refresh/loads table data on field init.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showAttributeContent",
        "label": "Show the content attribute inside the table. !!!WARNING recordTypeFilters is used when getting the data from server only!!!",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showOpenInNewTab",
        "label": "show button open in new tab",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "openAllNewTabLabel",
        "label": "label for button open in new tab",
        "defaultValue": "Otevřít vše v novém okně",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowedFileTypes",
        "label": "Allow upload documents of given types. You should define both extension and mime type. Example for PDF documents: [\".pdf\", \"application/pdf\"]",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "notLoad",
        "label": "Show and save all files into model attribute records. If notLoad is true then properties refreshDataOnInit, recordTypeFilters and allowedActions.refresh are ignored.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "cidlaExpression",
        "label": "Expression of cidla for move or unmove record",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "isInTest",
        "label": "Show file input element for test",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "watchedAttributes",
        "label": "Collection of watched attributes. After change one of these attributes, the records will be reloaded and the condition 'checkPhysical' will be updated.",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "bindOnProduct",
        "label": "Flag if newly documents are bound on a product.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "bindOnClient",
        "label": "Flag if newly documents are bound on a client.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showPublishSuccessMessage",
        "label": "Show message after publish record succeeded.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showChangeFormSuccessMessage",
        "label": "Show message after change form record succeeded.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "fast",
        "label": "use fast service version.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "preferredLoadBy",
        "label": "Overriding of the default load order. Possible values: PRODUCT, CLIENT, CASELIST, CASE",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "representative-field",
    "label": "The field to add representative of client. It is possible to select a person or a legal organization and the person as the substitute for the selected legal organization.",
    "model": {
      "representatives": {
        "type": "MAP",
        "label": "The list with representatives. Each representative has attributes type (person/manualPerson/company) and it can have attribute substitute = link to person or manualPerson. Representative person has attribute cluid. Representative manualPerson has attributes firstName, surname, personalId and birthDate. Representative company has only registrationId.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.PartyDto"
      }
    },
    "location": "comp/field/representativefield/representativefield.js",
    "application": "mobilita",
    "documentation": "SMART_UIF042+representative-field",
    "properties": [
      {
        "name": "addRepresentativeLabel",
        "label": "Label for button that adds new representative.",
        "defaultValue": "Přidat zástupce",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "rescompany-field",
    "label": "The field displays the about the company. The field supports searching company in RES (copied to RTODS).",
    "model": {
      "registrationNumber": {
        "type": "STRING",
        "label": "registration number (ICO) of the company",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "company": {
        "type": "MAP",
        "label": "company",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.CompanyDto"
      }
    },
    "location": "comp/field/rescompany/rescompany.js",
    "application": null,
    "documentation": "SMART_UIF019+rescompany-field",
    "properties": [
      {
        "name": "visibleItems",
        "label": "Optional flags (image, name, address, registrationNumber) describing visibilities of rescompany-field attributes (image, name, address, registrationNumber). If not set all attributes are visible.",
        "defaultValue": {
          "image": true,
          "name": true,
          "address": true,
          "registrationNumber": true
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "searchLabel",
        "label": "Label for the Search button",
        "defaultValue": "Vyhledat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "clearLabel",
        "label": "Label for the Clear button",
        "defaultValue": "Nové zadání",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "modalTitleLabel",
        "label": "The Title of the modal window",
        "defaultValue": "Vyhledat firmu...",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "nameLabel",
        "label": "Label for the result table column Name in the modal window",
        "defaultValue": "Jméno",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "icoLabel",
        "label": "Label for the result table column ICO in the modal window",
        "defaultValue": "ICO",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "registrationNumberLabel",
        "label": "Label for the result table column Registration number in the modal window",
        "defaultValue": "IČO",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addressLabel",
        "label": "Label for the result table column Address in the modal window",
        "defaultValue": "Addresa",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "actionsLabel",
        "label": "Label for the result table column Actions in the modal window",
        "defaultValue": "Akce",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectLabel",
        "label": "Label for the Select button in the result table in the modal window",
        "defaultValue": "Vybrat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "cancelLabel",
        "label": "Label for Cancel button in the modal window",
        "defaultValue": "Storno",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "msgSystemNotAvailableLabel",
        "label": "Message displayed when the system is not available and does not return any result",
        "defaultValue": "Backend systém není dostupný, bude nutno zadat data ručně",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "resultLabel",
        "label": "Label shown when the search returned some result",
        "defaultValue": "Výsledky",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "noResultLabel",
        "label": "Label shown when the search returned no result",
        "defaultValue": "Žádné výsledky",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "restcaller-field",
    "label": "This field calls the external REST Service",
    "model": {
      "error": {
        "type": "BOOLEAN",
        "label": "The attribute is set to true if the service call failed",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "success": {
        "type": "BOOLEAN",
        "label": "The attribute is set to true if the service call completed successfully",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "manual": {
        "type": "BOOLEAN",
        "label": "The attribute is set to true if the user presses the manual button",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/restcaller/restcaller.js",
    "application": null,
    "documentation": "SMART_UIF021+restcaller-field",
    "properties": [
      {
        "name": "uri",
        "label": "Service endpoint URL",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "template",
        "label": "Freemarker template for the service request.",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "method",
        "label": "Optional specification of the the HTTP method.",
        "defaultValue": "GET",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "webapikey",
        "label": "Optional WebAPI key.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "username",
        "label": "Optional username.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "password",
        "label": "Optional password.",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "mockAllowed",
        "label": "Allow mocking the service using serviceMocks.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "jsonpaths",
        "label": "JSONPath to get the value from the response and assign value to attribute. It can contain property 'errorValue'. If result is equal errorValue then flag ERROR will be set to true.",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "runLabel",
        "label": "Label for Run action",
        "defaultValue": "RunMe!",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "successLabel",
        "label": "Label for success indicator",
        "defaultValue": "OK",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "errorLabel",
        "label": "Label for error indicator",
        "defaultValue": "ERROR",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "manualLabel",
        "label": "Label for manual indicator",
        "defaultValue": "MANUAL",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showManual",
        "label": "if show button manual",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeActivity",
        "label": "Closes the activity based on model data. Its typical behaviour is to close the current activity and then continue with exceptional activity. It can contain values: true, false or expressions.",
        "defaultValue": {
          "error": true,
          "success": true,
          "manual": true
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "richtext-field",
    "label": "The field shows enhanced (word-like) text area field",
    "model": {
      "text": {
        "type": "TEXT",
        "label": "The field stores HTML",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/richtext/richtext.js",
    "application": null,
    "documentation": "SMART_UIF020+richtext-field",
    "properties": [
      {
        "name": "generateLabel",
        "label": "Label of the Generate button",
        "defaultValue": "Vygenerovat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "template",
        "label": "Freemarkeer template",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "search-cases-field",
    "label": "The field displays list of the bank cases.",
    "model": {
      "cluid": {
        "type": "STRING",
        "label": "The cluid of the client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "cgpId": {
        "type": "STRING",
        "label": "Identification of product",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "fullAccountNumber": {
        "type": "STRING",
        "label": "fullAccountNumber in form 0-123/0800",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "client": {
        "type": "MAP",
        "label": "The client instance. This model value overrides the value stored in cluid",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.PersonDto"
      },
      "searchCases": {
        "type": "LIST",
        "label": "Result of loading cases by cluid",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.SearchCasesDto"
      },
      "selectedCases": {
        "type": "LIST",
        "label": "List of selected cases from search",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.SearchCasesDto"
      }
    },
    "location": "comp/field/searchcasesfield/searchcasesfield.js",
    "application": null,
    "documentation": "SMART_UIF050+search-cases-field",
    "properties": [
      {
        "name": "tableLabels",
        "label": "Label for table of search cases",
        "defaultValue": {
          "cidla": "ID případu",
          "caseName": "Název BPM",
          "caseState": "Stav případu",
          "caseType": "Typ případu",
          "applicationNumber": "Aplikační číslo",
          "creationDate": "Datum vytvoření",
          "lastStateChange": "Datum poslední změny",
          "systemId": "Id systému",
          "processPhase": "Procesní fáze",
          "cgpId": "Id CGP"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibleItems",
        "label": "Column name which are visible",
        "defaultValue": [
          "applicationNumber",
          "cidla",
          "caseName",
          "caseState",
          "caseType",
          "creationDate",
          "lastStateChange",
          "systemId",
          "processPhase",
          "cgpId"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "watchedAttributes",
        "label": "Collection of watched attributes",
        "defaultValue": [
          "client",
          "cluid"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "masterValues",
        "label": "Collection of attributes used for filtering, example: [\"attr1\", \"attr2\"]",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "emptyListLabel",
        "label": "Label for no cases",
        "defaultValue": "There is nothing.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "filterFunction",
        "label": "It is optional expression to filter values to display. Example: 'getItem(item, \"accountNumber\") == \"0552329189\"'",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "multipleSelect",
        "label": "If can select more than one case",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectingEnabled",
        "label": "If selecting is not enabled, checkboxes for selecting cases will be hidden",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addRelatedPersonsCases",
        "label": "If true and in case, component is used to search cases by product, all cases of all persons related to search product will be found.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "servicecaller-field",
    "label": "This field calls the external WebService",
    "model": {
      "error": {
        "type": "BOOLEAN",
        "label": "The attribute is set to true if the service call failed",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "success": {
        "type": "BOOLEAN",
        "label": "The attribute is set to true if the service call completed successfully",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "manual": {
        "type": "BOOLEAN",
        "label": "The attribute is set to true if the user presses the manual button",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/servicecaller/servicecaller.js",
    "application": null,
    "documentation": "SMART_UIF021+servicecaller-field",
    "properties": [
      {
        "name": "uri",
        "label": "Service endpoint URL",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "template",
        "label": "Freemarker template for the service request.",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "operation",
        "label": "Optional specification of the the WSDL operation. It is used only for auditing",
        "defaultValue": "serviceCaller",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "mw",
        "label": "Incidates whether it is MW call or not.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "mwUser",
        "label": "",
        "defaultValue": "BRASIL",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "mockAllowed",
        "label": "Allow mocking the service using serviceMocks.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "xpaths",
        "label": "XPath to get the value from the response and assign value to attribute. It can contain property 'errorValue'. If result is equal errorValue then flag ERROR will be set to true.",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "runLabel",
        "label": "Label for Run action",
        "defaultValue": "Spustit!",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "successLabel",
        "label": "Label for success indicator",
        "defaultValue": "OK",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "errorLabel",
        "label": "Label for error indicator",
        "defaultValue": "ERROR",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "manualLabel",
        "label": "Label for manual indicator",
        "defaultValue": "MANUAL",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showManual",
        "label": "if show button manual",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeActivity",
        "label": "Closes the activity based on model data. Its typical behaviour is to close the current activity and then continue with exceptional activity. It can contain values: true, false or expressions.",
        "defaultValue": {
          "error": true,
          "success": true,
          "manual": true
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "overviewEditable",
        "label": "Enable/editable servicecaller-field in overview.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "checkStatus",
        "label": "IGNORE does not check Status at all, WARN logging just err message, ERROR logging with stacktrace",
        "defaultValue": "WARN",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "showtext-field",
    "label": "The field shows text area field, which is read only",
    "model": {
      "text": {
        "type": "TEXT",
        "label": "The field stores HTML",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/showtext/showtext.js",
    "application": null,
    "documentation": "SMART_UIF032+showtext-field",
    "properties": [
      {
        "name": "template",
        "label": "Freemarkeer template",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "watchedAttributes",
        "label": "Collection of watched attributes",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "openInNewWindow",
        "label": "Flag for show generated text in popup.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "openInNewWindowLabel",
        "label": "Label for link to open generated text in popup.",
        "defaultValue": "Otevřít v novém okně",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "openInNewWindowTitle",
        "label": "Title of popup with generated text.",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "similar-cases-field",
    "label": "The field displays list of the similar cases.",
    "model": {
      "cidlas": {
        "type": "LIST",
        "label": "The list of CIDLAs",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/similarcasesfield/similarcasesfield.js",
    "application": null,
    "documentation": "SMART_UIF022+similar-cases-field",
    "properties": [
      {
        "name": "titleLabel",
        "label": "Label for Title in the similar cases table",
        "defaultValue": "Případ",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "openLabel",
        "label": "Label for Open button in the similar cases table",
        "defaultValue": "Otevřít",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "statusLabels",
        "label": "Labels for Case Status",
        "defaultValue": {
          "OPENED": "Zahájeno",
          "WAITING": "Čekající",
          "RUNNING": "Ve zpracování",
          "COMPLETED": "Dokončeno",
          "NEW": "Nový",
          "ACTIVATED": "Ve zpracování",
          "CANCELLED": "Zrušený",
          "PROCESSED": "Dokončený"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "notFoundLabel",
        "label": "Label for Not Found Message in the similar cases table",
        "defaultValue": "Nebyly nalezeny žádné podobné případy.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "refreshLabel",
        "label": "Label for Refresh button",
        "defaultValue": "Aktualizovat",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "luceneQuery",
        "label": "Lucene query. Example: \"caseType:SCT004\"",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "sortBy",
        "label": "Collection of attributes to be sorted within lucene query. Example: [\"asc:createdAt\",\"desc:completedAt\"]",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "loadedAttributes",
        "label": "Collection of attributes to be loaded with result row.",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "filterFunction",
        "label": "It is optional expression to filter values to display. Example: \"getItem(getItem(collectionSubset( item.loadedAttributes , \"item.name=='sv1'\") ,0),\"value\") ==\"cesko\"",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "watchedAttributes",
        "label": "Collection of watched attributes.  Example: [\"sv1\",\"sv2\"]",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "openInNewWindow",
        "label": "Open in new Window flag",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "taskHistoryMode",
        "label": "Describes the mode of displaying the case history. Options 'NONE' - no history shown, 'MASTER_DETAIL_ON_CLICK' - show an master detail under the result table when detail button clicked.",
        "defaultValue": "NONE",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "taskHistoryShowButtonLabel",
        "label": "Label on button showing task detail component.",
        "defaultValue": "Zobrazit detaily historie",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "taskHistoryHideButtonLabel",
        "label": "Label on button showing task detail component.",
        "defaultValue": "Skrýt",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "taskDetailOfLabel",
        "label": "Label on top of task history detail.",
        "defaultValue": "Zobrazit historii pro: ",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showPhase",
        "label": "Show additional info (case phase) of the case.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "taskHistoryLabels",
        "label": "The task history component labels",
        "defaultValue": {
          "titleState": "stav",
          "titleDateStart": "od",
          "titleDateEnd": "do",
          "titleContactPerson": "kontaktní osoba",
          "notFoundLabel": "Nenalezeno."
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "showRefreshButton",
        "label": "Visible refresh button",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "standing-orders-field",
    "label": "The field for list of standing orders.",
    "model": {
      "orders": {
        "type": "LIST",
        "label": "The list of orders. In each order should be an object with variables: TBD.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/standingorders/standingordersfield.js",
    "application": "mobilita",
    "documentation": "SMART_UIF043+standing-orders-field",
    "properties": [
      {
        "name": "foreign",
        "label": "The type of orders: domestic (false) or foreign (true)",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "displaySeparator",
        "label": "Whether to show the horizontal line after component.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "transactionTypeCodebook",
        "label": "The codebook of allowed transactionTypes",
        "defaultValue": [
          {
            "id": "U",
            "value": "Trvalý příkaz k úhradě"
          },
          {
            "id": "I",
            "value": "Trvalý příkaz k inkasu"
          }
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "string-field",
    "label": "The field shows the simple text field",
    "model": {
      "value": {
        "type": "STRING",
        "label": "The field stores text to the attribute",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/string/string.js",
    "application": null,
    "documentation": "SMART_UIF023+string-field",
    "properties": [
      {
        "name": "inputAutoComplete",
        "label": "Autocomplete for input",
        "defaultValue": "on",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "regexp",
        "label": "Regular expresion",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "table-field",
    "label": "The field shows the table",
    "model": {
      "table": {
        "type": "LIST",
        "label": "The field stores list of the rows",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/table/table.js",
    "application": null,
    "documentation": "SMART_UIF031+table-field",
    "properties": [
      {
        "name": "visibleItems",
        "label": "Optional flags (pagination, add, delete) describing visibilities of table controls. If not set all attributes are visible.",
        "defaultValue": {
          "pagination": true,
          "add": true,
          "delete": true
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "visibleColumns",
        "label": "Definition of visible columns",
        "defaultValue": [],
        "exampleValue": [
          {
            "name": "id",
            "displayName": "ID",
            "enableCellEdit": false,
            "headerTooltip": "ID",
            "validators": {
              "required": false
            },
            "width": 30
          },
          {
            "name": "firstname",
            "displayName": "Jméno",
            "enableCellEdit": true,
            "sort": {
              "direction": "asc",
              "priority": 1
            },
            "suppressRemoveSort": true,
            "validators": {
              "required": true
            }
          },
          {
            "name": "surname",
            "displayName": "Příjmení",
            "enableCellEdit": true,
            "sort": {
              "direction": "asc",
              "priority": 0
            },
            "suppressRemoveSort": true,
            "validators": {
              "required": false
            }
          },
          {
            "name": "address",
            "displayName": "Adresa",
            "enableCellEdit": true,
            "enableSorting": false,
            "validators": {
              "required": false
            }
          },
          {
            "name": "codeBookDropDown",
            "displayName": "CB_PartyType",
            "enableCellEdit": true,
            "validators": {
              "required": true
            },
            "cellEditor": {
              "type": "dropdown",
              "codebook": "CB_PartyType"
            }
          },
          {
            "name": "checkbox",
            "displayName": "Checkbox",
            "enableCellEdit": true,
            "validators": {
              "required": true
            },
            "cellEditor": {
              "type": "checkbox"
            },
            "cellClass": "text-center"
          },
          {
            "name": "checkboxDisplayAsCheckbox",
            "displayName": "Checkbox - displayAsCheckbox",
            "enableCellEdit": true,
            "validators": {
              "required": true
            },
            "cellEditor": {
              "type": "checkbox",
              "displayAsCheckbox": true
            },
            "cellClass": "text-center"
          },
          {
            "name": "dropdownStatic",
            "displayName": "dropdownStatic",
            "enableCellEdit": true,
            "cellEditor": {
              "type": "dropdown",
              "value": "label",
              "id": "product",
              "options": [
                {
                  "product": "prod1Id",
                  "label": "label1"
                },
                {
                  "product": "product2Id",
                  "label": "label2"
                }
              ]
            }
          },
          {
            "name": "dateEdit",
            "displayName": "dateEditable",
            "enableCellEdit": true,
            "validators": {
              "required": true
            },
            "cellEditor": {
              "type": "date"
            }
          },
          {
            "name": "dateEdit2",
            "displayName": "dateReadOnly",
            "enableCellEdit": false,
            "cellEditor": {
              "type": "date"
            }
          }
        ],
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "firstLabel",
        "label": "Label for the First page button in the pagination",
        "defaultValue": "První",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "previousLabel",
        "label": "Label for the Previous page button in the pagination",
        "defaultValue": "Předchozí",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "nextLabel",
        "label": "Label for the Next page button in the pagination",
        "defaultValue": "Další",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "lastLabel",
        "label": "Label for the Last page button in the pagination",
        "defaultValue": "Poslední",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "itemsPerPage",
        "label": "Count of items in one page",
        "defaultValue": 5,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "addDataLabel",
        "label": "Label for the Add data button",
        "defaultValue": "Přidat data",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "deleteSelectedDataLabel",
        "label": "Label for the Delete selected data button",
        "defaultValue": "Smazat vybraná data",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "filterExpression",
        "label": "It is optional expression to filter products to display.",
        "defaultValue": null,
        "exampleValue": "getItem(item, \"isManual\") == true)' or 'getItem(item, getItem(\"isManual\")) == true)' or 'getItem(getItem(item, \"backendProduct\"), \"backendProductProdAgendaCode\")==\"2H\"' or 'substring(getItem(getItem(item, \"backendProduct\"), \"backendProductProdAgendaCode\"),0,2)==\"2H\"",
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "actionButtons",
        "label": "An array of action buttons under the table. Each has name, label, selectedOnly(true/false describing if action is applied to selected rows only or not), enabled expression and JS function to process row.",
        "defaultValue": [],
        "exampleValue": "[{\"name\":\"checkAll\", \"label\":\"Check all\" ,\"selectedOnly\":false,\"enabled\":\"true\", \"script\":\"row.checkboxDisplayAsCheckbox=true\"}]",
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "watchedAttributes",
        "label": "Collection of watched attributes",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "task-assignment-evaluation-field",
    "label": "Component evaluated to which queue should process continue based on preset parametrisation",
    "model": {
      "channel": {
        "type": "STRING",
        "label": "Describes where was requisition created. Examples: KCP, KCH, ChannelHC etd.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "isTicket": {
        "type": "BOOLEAN",
        "label": "Describes if case was created as ticket or as requisition.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "cluid": {
        "type": "STRING",
        "label": "Identification of the client",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "queue": {
        "type": "STRING",
        "label": "Result queue",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "primaryUserId": {
        "type": "STRING",
        "label": "userId of client primary business team",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "evaluationSuccess": {
        "type": "BOOLEAN",
        "label": "Returns true if evaluation was successful",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "evaluationError": {
        "type": "BOOLEAN",
        "label": "Returns true if an error has occured",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/taskassignmentevaluation/taskassignmentevaluation.js",
    "application": "mnt",
    "documentation": "",
    "properties": [
      {
        "name": "requisitionName",
        "label": "Type of requisition",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "taskCompleters",
        "label": "task completers in form of [{\"solverQueue\": \"APP_COMPLETER\", \"taskLabel\": \"Dopracování žádosti\", \"taskName\":\"applicationCompletion\"}]",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "task-join-field",
    "label": "The field displays a table of task.",
    "model": {
      "caseList": {
        "type": "LIST",
        "label": "list of tasks",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/taskjoinfield/taskjoinfield.js",
    "application": null,
    "documentation": "SMART_UIF033+task-join-field",
    "properties": [
      {
        "name": "solveButtonLabel",
        "label": "Label for button solve",
        "defaultValue": "Vyřešeno",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "unsolveButtonLabel",
        "label": "Label for button unsolve",
        "defaultValue": "Nevyřešeno",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "commentLabel",
        "label": "Label for column comment",
        "defaultValue": "Komentář",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "buttonsLabel",
        "label": "Label for column buttons",
        "defaultValue": "Akce",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "emptyLabel",
        "label": "info about empty case list",
        "defaultValue": "Seznam případů je prázdný.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "tableLabels",
        "label": "Labels for table columns",
        "defaultValue": [
          {
            "label": "Cidla",
            "key": "cidla"
          },
          {
            "label": "Popis případu",
            "key": "description"
          }
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "filteringExpression",
        "label": "Expression used for filtering cases",
        "defaultValue": "true",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "text-field",
    "label": "The field shows the text area field",
    "model": {
      "text": {
        "type": "TEXT",
        "label": "The field stores text to the attribute",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/text/text.js",
    "application": null,
    "documentation": "SMART_UIF024+text-field",
    "properties": [
      {
        "name": "numberRows",
        "label": "Number of rows",
        "defaultValue": 4,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "third-party-list-field",
    "label": "",
    "model": {
      "thirdParties": {
        "type": "LIST",
        "label": "Output list of parties.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/thirdpartylistfield/thirdpartylistfield.js",
    "application": "mobilita",
    "documentation": "SMART_UIF053+third-party-list",
    "properties": [
      {
        "name": "visibleFields",
        "label": "Map with visible fields.",
        "defaultValue": {
          "email": true,
          "cityPart": true,
          "incomeTransferDate": false,
          "thirdPartyIdentifier": false
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowedActions",
        "label": "Map with allowed actions.",
        "defaultValue": {
          "add": true,
          "update": true,
          "delete": true
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "thirdPartyList",
        "label": "List of parties to choose from.",
        "defaultValue": {
          "add": true,
          "update": true,
          "delete": true
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "allowCompanySearch",
        "label": "Boolean value for show/hide tab in a popup window to add company.",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "displayIncomeTransferDate",
        "label": "Boolean value for show/hide an income transfer date in a tab to add a company manually.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "displayThirdPartyIdentifier",
        "label": "Boolean value for show/hide third party identifier in a popup window to add a company.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "todo-field",
    "label": "Temporary field indicating not-yet-ready custom component.",
    "model": {},
    "location": "comp/field/todo/todo.js",
    "application": null,
    "documentation": "SMART_UIF025+todo-field",
    "properties": [
      {
        "name": "text",
        "label": "The text to be shown",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "url",
        "label": "URL to navigate when clicked",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "togglegroup-field",
    "label": "The field displays list of the buttons with the radio button logic. Only one attribute can be selected. The button has the following attributes: key, label, editable",
    "model": {
      "value": {
        "type": "STRING",
        "label": "The field stores key of the button",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/togglegroup/togglegroup.js",
    "application": null,
    "documentation": "SMART_UIF026+togglegroup-field",
    "properties": [
      {
        "name": "layoutDirection",
        "label": "Sets direction of layout to horizontal or vertical",
        "defaultValue": "horizontal",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "buttons",
        "label": "The list of the buttons",
        "defaultValue": [],
        "exampleValue": [
          {
            "key": "h1",
            "label": "Hodnota 1",
            "editable": "true",
            "visible": "true"
          },
          {
            "key": "h2",
            "label": "Hodnota 2",
            "editable": "true",
            "visible": "true"
          }
        ],
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeActivity",
        "label": "Closes the activity the field is in. It can contain values: true, false or expression.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "uncheckable",
        "label": "Whether a radio button can be unchecked or not (true mean you can uncheck, false you can not uncheck)",
        "defaultValue": true,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "buttonSize",
        "label": "If we use definition of button size",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "buttonWidth",
        "label": "Width of the button (small, base, large)",
        "defaultValue": "small",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "buttonLine",
        "label": "Height in line of the button 1-4",
        "defaultValue": "1",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "oldSchool",
        "label": "Old version checkbox",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "transactions-field",
    "label": "The field shows the table",
    "model": {
      "product": {
        "type": "MAP",
        "label": "INPUT: The card number",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "fullAccountNumber": {
        "type": "STRING",
        "label": "INPUT: The full account number",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "account": {
        "type": "MAP",
        "label": "INPUT: The account object",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "dateFrom": {
        "type": "DATE",
        "label": "INPUT: Display transactions from",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "dateTo": {
        "type": "DATE",
        "label": "INPUT: Display transactions to",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "transactions": {
        "type": "LIST",
        "label": "OUTPUT: All displayed transactions",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.transaction.TransactionHistoryDto"
      },
      "selectedTransactions": {
        "type": "LIST",
        "label": "OUTPUT: Selected transactions only",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.esb.service.transaction.TransactionHistoryDto"
      }
    },
    "location": "comp/field/transactions/transactions.js",
    "application": null,
    "documentation": "SMART_UIF031+transactions-field",
    "properties": [
      {
        "name": "visibleColumns",
        "label": "How the table looks like.",
        "defaultValue": [],
        "exampleValue": [
          {
            "name": "transactionType",
            "displayName": "transactionType",
            "filtering": "fulltext",
            "width": "10%",
            "renderExpression": "getItem(item,\"transactionType\")"
          },
          {
            "name": "orderingDate",
            "displayName": "Datum",
            "headerTooltip": "Datum",
            "filtering": "date",
            "width": "10%",
            "renderExpression": "formatDate(getItem(item,\"orderingDate\"))"
          },
          {
            "name": "kontext",
            "displayName": "Kontext",
            "filtering": "fulltext",
            "width": "30%",
            "renderExpression": "conditional({\"condition\":containsItem(array(\"25\",\"28\",\"29\"),getItem(item,\"transactionType\")),\"value\":getItem(getItem(item,\"accountParty\"),\"accountPartyDescription\")},{\"condition\":containsItem(array(\"5\",\"15\",\"26\",\"88\"),getItem(item,\"transactionType\")),\"value\":safeConcat(\"Výběr kartou z bankomatu: \",getItem(getItem(item,\"accountParty\"),\"accountPartyDescription\"))},{\"condition\":true,\"value\":preloadedCBvalue(\"CB_TransactionType\",getItem(item,\"transactionType\"))})"
          },
          {
            "name": "castka",
            "displayName": "Částka",
            "filtering": "exact",
            "width": "10%",
            "renderExpression": "safeConcat(getItem(item,\"transactionAccountAmount\"),\" Kč\")"
          },
          {
            "name": "castkaPuvodni",
            "displayName": "Částka v původní měně",
            "filtering": "exact",
            "width": "10%",
            "renderExpression": "safeConcat(getItem(item,\"transactionAmount\"),\" \", getItem(item,\"transactionCurrency\"))"
          },
          {
            "name": "cisloPlatebniKarty",
            "displayName": "Číslo platební karty",
            "width": "20%",
            "renderExpression": "conditional({\"condition\":containsItem(array(\"25\",\"28\",\"29\",\"5\",\"15\",\"26\",\"88\"),getItem(item,\"transactionType\")),\"value\":safeConcat(\"XXXX XXXX XXXX \" ,substring(getItem(getItem(item,\"accountParty\"),\"accountPartyInfo\"),12,16))},{\"condition\":true,\"value\":\"\"})"
          }
        ],
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "detailColumns",
        "label": "How the detail looks like.",
        "defaultValue": [],
        "exampleValue": [
          {
            "name": "transactionType",
            "displayName": "transactionType",
            "visible": true,
            "renderExpression": "getItem(item,\"transactionType\")"
          },
          {
            "name": "orderingDate",
            "displayName": "Datum",
            "headerTooltip": "Datum",
            "visible": "getItem(item,\"orderingDate\") != null",
            "renderExpression": "formatDate(getItem(item,\"orderingDate\"))"
          },
          {
            "name": "orderingDate2",
            "displayName": "Datum",
            "headerTooltip": "Datum",
            "visible": "getItem(item,\"orderingDate\") == null",
            "renderExpression": "\"N/A\""
          },
          {
            "name": "spacer",
            "displayName": "",
            "height": "20px",
            "renderExpression": "\"\""
          },
          {
            "name": "kontext",
            "displayName": "Kontext",
            "renderExpression": "conditional({\"condition\":containsItem(array(\"25\",\"28\",\"29\"),getItem(item,\"transactionType\")),\"value\":getItem(getItem(item,\"accountParty\"),\"accountPartyDescription\")},{\"condition\":containsItem(array(\"5\",\"15\",\"26\",\"88\"),getItem(item,\"transactionType\")),\"value\":safeConcat(\"Výběr kartou z bankomatu: \",getItem(getItem(item,\"accountParty\"),\"accountPartyDescription\"))},{\"condition\":true,\"value\":preloadedCBvalue(\"CB_TransactionType\",getItem(item,\"transactionType\"))})"
          },
          {
            "name": "castka",
            "displayName": "Částka",
            "renderExpression": "safeConcat(getItem(item,\"transactionAccountAmount\"),\" Kč\")"
          },
          {
            "name": "castkaPuvodni",
            "displayName": "Částka v původní měně",
            "renderExpression": "safeConcat(getItem(item,\"transactionAmount\"),\" \", getItem(item,\"transactionCurrency\"))"
          },
          {
            "name": "cisloPlatebniKarty",
            "displayName": "Číslo platební karty",
            "renderExpression": "conditional({\"condition\":containsItem(array(\"25\",\"28\",\"29\",\"5\",\"15\",\"26\",\"88\"),getItem(item,\"transactionType\")),\"value\":safeConcat(\"XXXX XXXX XXXX \" ,substring(getItem(getItem(item,\"accountParty\"),\"accountPartyInfo\"),12,16))},{\"condition\":true,\"value\":\"\"})"
          }
        ],
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "noMatchingDataFoundLabel",
        "label": "",
        "defaultValue": "No data match the filter specified",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "tooManyDataLabel",
        "label": "",
        "defaultValue": "Too many transactions loaded. The list shows first 1000 of them.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "noDataFoundLabel",
        "label": "",
        "defaultValue": "No transaction found.",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "modalTitleLabel",
        "label": "Detail window title",
        "defaultValue": "Transaction detail",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeLabel",
        "label": "Detail window close button",
        "defaultValue": "close",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "preLoadedCodeBooks",
        "label": "The array of the all pre-loaded codebooks. It's necessary to load codebook before use in the renderExpression.",
        "defaultValue": [
          "CB_TransactionType"
        ],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "itemsPerPage",
        "label": "Count of items in one page",
        "defaultValue": 10,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "loadPageSize",
        "label": "Count of items to be downloaded at one batch",
        "defaultValue": 100,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "filterExpression",
        "label": "It is optional expression to filter products to display.",
        "defaultValue": null,
        "exampleValue": "'getItem(item, \"isManual\") == true)' or 'getItem(item, getItem(\"isManual\")) == true)' or 'getItem(getItem(item, \"backendProduct\"), \"backendProductProdAgendaCode\")==\"2H\"' or 'substring(getItem(getItem(item, \"backendProduct\"), \"backendProductProdAgendaCode\"),0,2)==\"2H\"'",
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "dataLoadExpression",
        "label": "Expression to load transaction according input attributes.",
        "defaultValue": "true",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "watchedAttributes",
        "label": "",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectLabel",
        "label": "",
        "defaultValue": "Výběr transakcí",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectAllLabel",
        "label": "",
        "defaultValue": "Všechny",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectSelectedLabel",
        "label": "",
        "defaultValue": "Vybrané",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectNotSelectedLabel",
        "label": "",
        "defaultValue": "Nevybrané",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "typeahead-field",
    "label": "Text completing input field component",
    "model": {
      "values": {
        "type": "LIST",
        "label": "Optional attribute contains list of the entries",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "selectedValue": {
        "type": "MAP",
        "label": "Stores selected value from entry",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/typeahead/typeahead.js",
    "application": null,
    "documentation": "SMART_UIF054+typeahead-field",
    "properties": [
      {
        "name": "entries",
        "label": "List of entries given by default",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "template",
        "label": "Format of string to be shown. Example: '${id}: ${surname}, ${firstName} - ${city}' is shown as '1: Doe, John - London' ",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "limit",
        "label": "Highest amount of results to be shown",
        "defaultValue": 8,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "masterValues",
        "label": "Attributes to use in filtering",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "filterFunction",
        "label": "Allows to filter which values from given data will be shown",
        "defaultValue": null,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectOnExact",
        "label": "When true, automatically select the item when it is the only one that exactly matches the user input",
        "defaultValue": "false",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "selectOnBlur",
        "label": "When true, the currently highlighted match is selected on change of the focus.",
        "defaultValue": "false",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "placeholder",
        "label": "Text displayed in field before its first use",
        "defaultValue": "Začněte psát...",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "colWidth",
        "label": "Width of the field",
        "defaultValue": 4,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "undocument-conditions-field",
    "label": "",
    "model": {
      "ndCheckTaskId": {
        "type": "STRING",
        "label": "ndCheckTaskId",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/undocumentconditionsfield/undocumentconditionsfield.js",
    "application": "cedr",
    "documentation": "",
    "properties": [
      {
        "name": "labels",
        "label": "Labels for field and popup",
        "defaultValue": {
          "conditionEditTitle": "Upravit podmínku",
          "addButton": "Uložit",
          "closeButton": "Zavřít",
          "changeConfigButton": "Změna konfigurace",
          "cancelConButton": "Zneplatnit podmínku",
          "addCondition": "Přidat podmínku",
          "documentAddTitle": "Přidat dokument",
          "addDocumentButton": "Přidat",
          "mortgageAgreement": "Úvěrová smlouva",
          "dateOfSign": "Datum podpisu úvěrové smlouvy",
          "dateOfEnd": "Datum konce čerpání",
          "firstDisbursement": "Datum prvního čerpání",
          "lastDisbursement": "Datum posledního čerpání",
          "cancel": "Cancel",
          "addDuidTitle": "Zadat úvěrovou smlouvu"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "urgency-conditions-field",
    "label": "Field listing all conditions and read-only for clients and product.",
    "model": {
      "cidla": {
        "type": "STRING",
        "label": "Cidla for case",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "nextUrgencyStepDate": {
        "type": "DATE",
        "label": "Date, that will be set as earliestAssigningDate of following urgency task.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "comment": {
        "type": "TEXT",
        "label": "Human commentary input.",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "ignoreUrgency": {
        "type": "BOOLEAN",
        "label": "If ignore urgency",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "technicalUrgencyLevelId": {
        "type": "STRING",
        "label": "Technical current step level id",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "currentUrgencyLevelId": {
        "type": "STRING",
        "label": "Technical next step level id",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "blockProcessEnding": {
        "type": "BOOLEAN",
        "label": "Wheather or not enable ending of urgency process",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      }
    },
    "location": "comp/field/urgencyconditionsfield/urgencyconditionsfield.js",
    "application": "cedr",
    "documentation": "",
    "properties": [
      {
        "name": "labels",
        "label": "Labels for field and popup",
        "defaultValue": {
          "addComment": "Přidat komentář",
          "saveButton": "Uložit",
          "closeButton": "Cancel",
          "drawingConditions": "Čerpací podmínky",
          "unbindingConditions": "Vyvazovací podmínky",
          "subsequentConditions": "Následné podmínky",
          "transe": "Tranše",
          "conditionEditTitle": "Upravit podmínku",
          "conditionNewTitle": "Vytvořit novou podmínku",
          "addButton": "Uložit",
          "cancel": "Cancel",
          "addDuidTitle": "Přiložit dokument",
          "changeConfigButton": "Změna konfigurace",
          "cancelConButton": "Zneplatnit podmínku",
          "cancelConButtonShort": "Zneplatnit",
          "addCondition": "Přidat podmínku",
          "editCondition": "Upravit podmínku",
          "documentAddTitle": "Přidat dokument",
          "addDocumentButton": "Přidat",
          "saveAll": "Uložit",
          "conditions": "Podmínky",
          "saveAndActualization": "Uložit a aktualizovat"
        },
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  },
  {
    "name": "user-field",
    "label": "The field displays the user information from IAM. The fields supports searching identity in IAM.",
    "model": {
      "username": {
        "type": "STRING",
        "label": "The unique identifier of the user",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "channel": {
        "type": "STRING",
        "label": "Returns channel",
        "direction": null,
        "supportsAny": false,
        "structureType": null
      },
      "identity": {
        "type": "MAP",
        "label": "Output IdentityDto.",
        "direction": null,
        "supportsAny": false,
        "structureType": "cz.csas.smart.core.model.IdentityDto"
      }
    },
    "location": "comp/field/user/user.js",
    "application": null,
    "documentation": "SMART_UIF027+user-field",
    "properties": [
      {
        "name": "visibleItems",
        "label": "Optional flags (image) describing visibilities of person-field attributes (image, contact, manager). If not set all attributes are visible.",
        "defaultValue": {
          "image": true,
          "contact": true,
          "manager": true,
          "orgUnit": false
        },
        "exampleValue": null,
        "mergeDefault": true,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "labels",
        "label": "Labels for all buttons and Identity search. Labels are: search, clear, searchIdentities, firstName, surName, fullName, userName, employeeNumber, contacts, actions, select, cancel, errorText",
        "defaultValue": {
          "search": "Vyhledat",
          "clear": "Nové zadání",
          "searchIdentities": "Prohledat uživatele",
          "firstName": "Jméno",
          "surName": "Příjmení",
          "fullName": "Celé jméno",
          "userName": "Uživatelské jméno",
          "employeeNumber": "Zaměstnanecké číslo",
          "contacts": "Kontakty",
          "actions": "Akce",
          "select": "Vybrat",
          "cancel": "Storno",
          "errorText": "Backend systém není dostupný."
        },
        "exampleValue": null,
        "mergeDefault": true,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "closeActivity",
        "label": "Closes the activity the field is in. It can contain values: true, false or expression.",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "managerLabel",
        "label": "Label for manager",
        "defaultValue": "VOT - nadřízený",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "displayInLine",
        "label": "Label for display in one line",
        "defaultValue": false,
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "channelConditions",
        "label": "Conditions for evaluation of channel in format: [ { \"channelName\": \"ChannelHC\", \"conditions\":{ \"workingPositions\": [\"40002492\", \"40002518\", \"41140026\"], \"roles\": [] } }, { \"channelName\": \"B\", \"conditions\":{ \"workingPositions\": [], \"roles\": [\"CPS_MNT_CreateTicketFO\", \"CPS_MNT_CreateApplicationFO\"] } } ]",
        "defaultValue": [],
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      },
      {
        "name": "defaultChannel",
        "label": "Channel that will be returned if none of conditions is fullfiled",
        "defaultValue": "",
        "exampleValue": null,
        "mergeDefault": false,
        "deprecationReason": null,
        "required": null
      }
    ]
  }
]